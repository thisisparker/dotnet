<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/dotnet/tag/crypto.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/dotnet/" rel="alternate" type="text/html" /><updated>2022-09-18T22:31:32-04:00</updated><id>http://localhost:4000/dotnet/tag/crypto.xml</id><title type="html">parker higgins dot net</title><subtitle></subtitle><author><name>Parker Higgins</name></author><entry><title type="html">Basic crypto errors and no public review at the Washington Post</title><link href="http://localhost:4000/dotnet/2015/07/basic-crypto-errors-and-no-public-review-at-the-washington-post/" rel="alternate" type="text/html" title="Basic crypto errors and no public review at the Washington Post" /><published>2015-07-20T01:25:27-04:00</published><updated>2015-07-20T01:25:27-04:00</updated><id>http://localhost:4000/dotnet/2015/07/basic-crypto-errors-and-no-public-review-at-the-washington-post</id><content type="html" xml:base="http://localhost:4000/dotnet/2015/07/basic-crypto-errors-and-no-public-review-at-the-washington-post/"><![CDATA[<p>The <em>Washington Post</em> doubled down this weekend on <a href="https://www.washingtonpost.com/opinions/putting-the-digital-keys-to-unlock-data-out-of-reach-of-authorities/2015/07/18/d6aa7970-2beb-11e5-a250-42bd812efc09_story.html">its ridiculous argument for new encryption that uses a “Golden Key”</a> available only to law enforcement under a court order. This proposal has a few weaknesses; perhaps chief among them is that it is literally impossible.</p>

<p>Given that putative authorities like FBI Director James Comey are willing to ignore the reality of how cryptography works, it’s weird but understandable that the Washington Post could basically disregard the feedback from experts about the same. Still, to see the editorial board of such a major outlet to tell the nerds to <a href="https://twitter.com/bdbreedlove/status/622916962914537472">get back to double-checking how math works</a> is frustrating.</p>

<p>Compounding that frustration is the fact that the <em>Washington Post</em> has basically no public escalation track for review. The <em>Post</em>‘s <em>reporting</em> on cryptography issues can be very good, but when the editorial board makes serious factual mistakes, they go unchallenged.</p>

<p>The <em>New York Times</em> has Public Editor Margaret Sullivan, who takes feedback from readers and says when the paper has erred. That’s not enough in itself—that the <em>Times</em> makes <a href="https://twitter.com/bluechoochoo/status/622985405479170048">the same kinds of mistakes over and over</a> is a pretty good indicator of its course correction ability—but it <em>feels</em> better than having no recourse. It also helps to defuse arguments from people (like Comey himself) who would cite the editorial approvingly if the paper’s own oversight has found problems with it.</p>

<p>The <em>Post</em> had an ombudsman until 2013, when they discontinued the role—<a href="http://mediamatters.org/blog/2013/02/12/former-washington-post-ombudsmen-cutting-positi/192630">over protests from former ombudsmen</a>. They replaced it with a “reader representative,” who was a Post employee. The <a href="https://www.washingtonpost.com/blogs/omblog/post/doug-feaver-named-the-washington-posts-first-reader-representative/2013/03/07/83254b7a-8744-11e2-999e-5f8e0410cb9d_blog.html">first person to hold the role was Doug Feaver</a>, after he’d retired from an editorial role with 37 years at the paper. He held the reader rep spot for less than a year, when he left and was <a href="https://www.washingtonpost.com/pr/wp/2014/02/20/alison-coliagnese-to-become-reader-representative/">replaced by Alison Coglianese</a>.</p>

<p>Doug Feaver was supposed to hold the paper accountable, but he did little of that. Per <a href="http://mediamatters.org/blog/2014/01/08/exclusive-washington-post-reader-representative/197483">this Media Matters breakdown</a>:</p>

<blockquote>
  <p>Of his 28 blog posts since April 5, 2013, 26 consisted simply of Feaver aggregating reader comments from Post articles and columns without additional commentary. The other two consisted of a piece declaring the paper free of any conflict of interest regarding the Post’s Jerusalem correspondent and Feaver’s initial post chronicling the initial inquiries he had received in his position (“the biggest issue to come to my attention was the disappearing print button on the article pages of washingtonpost.com”).</p>
</blockquote>

<p>As far as I can tell, Coglianese only wrote one post as reader rep, about the stock and mutual fund listings accidentally being <a href="https://www.washingtonpost.com/blogs/ask-the-post/wp/2014/02/26/sunday-stock-tables-gone-for-the-moment-but-not-forgotten/">left out of the Sunday Business section one week</a>. Searching her name on the site produces nothing more recent than that, and no announcements that the reader rep role had been discontinued. It just faded away.</p>

<p>So as it stands, there’s no public representative at the paper noting that the <em>Post</em> continues to propose a physical impossibility in its editorial pages. Unfortunately, it’s hard to imagine the conversation progressing intelligently while it continues to do so.</p>]]></content><author><name>Parker Higgins</name></author><category term="Uncategorized" /><category term="crypto" /><category term="journalism" /><category term="washington post" /><summary type="html"><![CDATA[The Washington Post doubled down this weekend on its ridiculous argument for new encryption that uses a “Golden Key” available only to law enforcement under a court order. This proposal has a few weaknesses; perhaps chief among them is that it is literally impossible.]]></summary></entry><entry><title type="html">Making Alice &amp;#038; Bob tees</title><link href="http://localhost:4000/dotnet/2015/01/making-alice-bob-tees/" rel="alternate" type="text/html" title="Making Alice &amp;#038; Bob tees" /><published>2015-01-19T01:20:08-05:00</published><updated>2015-01-19T01:20:08-05:00</updated><id>http://localhost:4000/dotnet/2015/01/making-alice-bob-tees</id><content type="html" xml:base="http://localhost:4000/dotnet/2015/01/making-alice-bob-tees/"><![CDATA[<p>I wanted a t-shirt in the style of the famous <a href="http://www.experimentaljetset.nl/archive/john-paul-ringo-george">Experimental Jetset Beatles shirt</a>, but with the <a href="https://en.wikipedia.org/wiki/Alice_and_Bob#Cast_of_characters">traditional Alice &amp; Bob placeholder names</a> from crypto discussions. There were a few options for similar things—Bits of Freedom in the Netherlands has <a href="https://www.tjunk.com/nl/Producten/product/558/productvariant/374/Alice-Bob-Zwart">one that has Alice and Bob but also intelligence officials</a>, and there are <a href="http://www.zerodayclothing.com/products/aliceandbob/aliceandbob.php">other designs online</a>—but none was quite what I wanted.</p>

<p>Fortunately, it was easy to whip together a pretty convincing looking chunky white Helvetica list of names. From there, I used a company called Teespring, which lets you pick the printing threshold and retail cost. At first I just made <a href="http://teespring.com/crypto-jetset-alice-bob">the cut I wanted for myself</a>—white text on a black men’s American Apparel shirt—but a bunch of my friends asked <a href="http://teespring.com/crypto-jetset-alice-bob-w">for women’s cuts</a>, and it’s very clear to me in retrospect I should’ve made them in the first place.</p>

<p><img src="https://parkerhiggins.net/wp-content/uploads/2015/01/front.jpg" alt="" /></p>

<p>Both campaigns “tipped” in the first day online, so men’s and women’s t-shirts will be printed in the next few weeks. So far, 40 shirts have been sold—it’s definitely kind of remarkable to think that sprung from my off-hand idea.</p>

<p>I’ve gotten other shirts from Teespring and the quality is high, so I’m looking forward to wearing it. If you want one of these, get it quick!</p>]]></content><author><name>Parker Higgins</name></author><category term="Uncategorized" /><category term="crypto" /><category term="t-shirts" /><summary type="html"><![CDATA[I wanted a t-shirt in the style of the famous Experimental Jetset Beatles shirt, but with the traditional Alice &amp; Bob placeholder names from crypto discussions. There were a few options for similar things—Bits of Freedom in the Netherlands has one that has Alice and Bob but also intelligence officials, and there are other designs online—but none was quite what I wanted.]]></summary></entry><entry><title type="html">An email signature to encourage encryption use</title><link href="http://localhost:4000/dotnet/2014/08/email-signature-nudge-encryption-use/" rel="alternate" type="text/html" title="An email signature to encourage encryption use" /><published>2014-08-10T20:38:38-04:00</published><updated>2014-08-10T20:38:38-04:00</updated><id>http://localhost:4000/dotnet/2014/08/email-signature-nudge-encryption-use</id><content type="html" xml:base="http://localhost:4000/dotnet/2014/08/email-signature-nudge-encryption-use/"><![CDATA[<p><img src="http://imgs.xkcd.com/comics/pgp.png" alt="" />A great way to encourage more ubiquitous email encryption is to let people you’re emailing know that you’re equipped to use it, and that they can be too.</p>

<p>Some people use PGP signatures for that purpose, but inline signatures can be off-putting to people who don’t know what they are, and attachments can be similarly confusing. (Not to mention that, <a href="https://xkcd.com/1181/">as XKCD notes</a>, the security benefits are pretty slim.)</p>

<p>A one-line addition to an email signature is a good compromise. I propose the following:</p>

<blockquote>
  <p>I prefer to use encrypted email. My public key fingerprint is 4FF3 AA1B D29E 1638 32DE C765 9433 5F88 9A36 7709. Learn how to encrypt your email with <a href="https://emailselfdefense.fsf.org/en/">the Email Self Defense guide</a>.</p>
</blockquote>

<p>In my case, because I’ve got my key available on an HTTPS site, I’d probably <a href="https://www.eff.org/files/2013/11/03/parkerkey.txt">link to it directly</a> as well.</p>

<p>This system isn’t perfect, and in particular is not a very secure way to distribute your fingerprint. But it could be a good nudge to people who might be considering learning about email encryption while flagging you as somebody who might be able to help, and especially if you post to publicly archived mailing lists, it’s a way of getting your fingerprint tied to your emails in lots of places.</p>]]></content><author><name>Parker Higgins</name></author><category term="Uncategorized" /><category term="crypto" /><category term="encryption" /><category term="pgp" /><category term="privacy" /><category term="security" /><summary type="html"><![CDATA[A great way to encourage more ubiquitous email encryption is to let people you’re emailing know that you’re equipped to use it, and that they can be too.]]></summary></entry><entry><title type="html">Guide to security guides</title><link href="http://localhost:4000/dotnet/2014/03/guide-to-security-guides/" rel="alternate" type="text/html" title="Guide to security guides" /><published>2014-03-17T01:49:59-04:00</published><updated>2014-03-17T01:49:59-04:00</updated><id>http://localhost:4000/dotnet/2014/03/guide-to-security-guides</id><content type="html" xml:base="http://localhost:4000/dotnet/2014/03/guide-to-security-guides/"><![CDATA[<p>Here are some resources I’ve found very useful for getting through the many communication options that are presented as secure.</p>

<ul>
  <li>“<a href="https://missingm.co/2014/02/fighting-dishfire-the-state-of-mobile-cross-platform-encrypted-messaging/">The State of Mobile, Cross-Platform, Encrypted Messaging</a>” – This is all about mobile apps for end-to-end crypto. My money’s on TextSecure once it’s out for iPhone. Since the major version upgrade it’s been one of my favorite examples of workable crypto software.</li>
  <li>“<a href="https://github.com/OpenTechFund/secure-email">Next-generation secure email</a>” – Who knows what’s coming next for email? We need something that allows text and media to be transmitted in an end-to-end encrypted asynchronous (but fast) channel. This guide breaks down the various options well.</li>
  <li>“<a href="http://evanhahn.com/2fa/">Two Factor Authentication List</a>” – This one’s a little different, in that it aims to be an exhaustive list of all the places the 2FA are available for users. It accepts pull requests, so if something’s missing, add it! There’s also <a href="http://twofactorauth.org/">a second list</a>, which breaks down the services by category and how the second factor is delivered, but it’s not quite as comprehensive yet.</li>
</ul>

<p>What am I missing? Let me know and I’ll add it in.</p>]]></content><author><name>Parker Higgins</name></author><category term="Uncategorized" /><category term="crypto" /><category term="email" /><category term="security" /><category term="textsecure" /><category term="two factor authentication" /><summary type="html"><![CDATA[Here are some resources I’ve found very useful for getting through the many communication options that are presented as secure.]]></summary></entry><entry><title type="html">Our encryption tools must be free software, not just open source</title><link href="http://localhost:4000/dotnet/2014/03/our-encryption-tools-must-be-free-software-not-just-open-source/" rel="alternate" type="text/html" title="Our encryption tools must be free software, not just open source" /><published>2014-03-03T03:15:30-05:00</published><updated>2014-03-03T03:15:30-05:00</updated><id>http://localhost:4000/dotnet/2014/03/our-encryption-tools-must-be-free-software-not-just-open-source</id><content type="html" xml:base="http://localhost:4000/dotnet/2014/03/our-encryption-tools-must-be-free-software-not-just-open-source/"><![CDATA[<p>In order to serve its purpose at all, encryption and secure communications software has to be single-mindedly dedicated to protecting and promoting its user’s interest. In the real world, that dedication can be subverted in a handful of ways. Broadly speaking, these failures can come from with technical problems, or from the developer’s interest being misaligned with the user’s.</p>

<p>The Freedom of the Press Foundation, which is currently raising money for a handful of important secure communications projects, published <a href="https://pressfreedomfoundation.org/blog/2014/02/why-its-vital-public-fund-open-source-encryption-tools">a blog post Thursday</a> about the need to <a href="https://pressfreedomfoundation.org/">give financial support to open-source encryption tools</a>. It’s a good post, and a vital effort, but it focuses only on the second class of failures.</p>

<p>Part of the issue is that the term “open-source” is doing more work here than it’s able: yes, software has to have the technical robustness and verifiability that comes with access to the source code, but it can’t stop there.</p>

<p>Access to source code is important for any program you’re going to trust, but for a security or encryption program it’s essential, for two related reasons. One: if the program doesn’t adhere to <a href="https://en.wikipedia.org/wiki/Kerckhoffs%27s_principle">Kerckhoff’s principle</a>, it’s vulnerable to bad actors busting through the obscurity on which it depends. Two: in the spirit of <a href="https://en.wikipedia.org/wiki/Linus%27s_Law#By_Eric_Raymond">Linus’s Law</a>, eyeballs on the source code may be the best hope for finding bugs.</p>

<p>But beyond any kind of licensing questions, users need to know they are actually running the software described by that source code. That affects <a href="https://www.eff.org/deeplinks/2014/02/open-letter-to-tech-companies">a whole range of things that aren’t dictated by the license</a>. Software source and binaries both need to be distributed securely—an area in which <a href="http://noncombatant.org/2014/03/03/downloading-software-safely-is-nearly-impossible/">we are really horribly failing</a>. <a href="https://blog.torproject.org/blog/deterministic-builds-part-one-cyberwar-and-global-compromise">Builds need to be verifiable</a>, and currently only a small handful of projects promise that. Source code needs to be documented and tested, not just available to read. These are the kinds of technical guarantees that encryption tools need to make—not just access to source code.</p>

<p>These are reasons enough to reject software for encrypted communications that doesn’t follow these practices. But as is often the case, alongside these technical requirements is a need for software that actually respects the user’s freedom. For that reason, despite the fact that it might raise confusion about funding models, I think we should demand that our security tools are <a href="https://en.wikipedia.org/wiki/The_Free_Software_Definition#Free_Software_Definition_vs_Open_Source_Definition">not just open-source</a>, but are <a href="https://www.gnu.org/philosophy/free-sw.html">free software</a>.</p>

<p>Fundamentally, the Foundation’s blog post talks about how commercial proprietary software has interests that are out of alignment with those of their users. That’s absolutely correct, and the efforts to raise money for better services is a good way to address that problem in the near term. ((A couple of years ago, Jake Appelbaum and Dmytri Kleiner had <a href="https://www.youtube.com/watch?v=zOiFgUj9bWI">a great conversation about this</a> at Republica in Berlin. I’ve been meaning to snip out the best bits for a while.))</p>

<p>But while “open-source” is a nice proxy to describe that kind of alignment, it doesn’t quite do the trick. Releasing source code doesn’t make software respect its users, and operating for profit doesn’t necessarily mean a software company will <a href="http://www.nytimes.com/2014/03/03/technology/when-start-ups-dont-lock-the-doors.html">cut corners on security concerns</a> or turn to surveillance as its business model. Really, beyond a threshold of technical competence, the meaningful axis is commitment to user freedoms, and only free software delivers on that.</p>

<p>It’s like the problems with <a href="http://epeus.blogspot.com/2012/03/when-youre-merchandise-not-customer.html">that old tired phrase</a>, “If you’re not paying for it, you’re the product.” Sometimes you’re not paying for something because it’s been released free into the world; sometimes you’re paying for it and they’re still selling you out.</p>

<p>We can and should support open-source encryption tools. <a href="https://pressfreedomfoundation.org/">The Freedom of the Press Foundation’s current bundle</a> is a great way to do that—and in fact, all of the tools it supports <em>are</em> free software and set a high bar for respecting users. (Full disclosure, I donated early on in this cycle.) But most importantly, we should support and promote tools that respect our freedoms.</p>]]></content><author><name>Parker Higgins</name></author><category term="Uncategorized" /><category term="crypto" /><category term="free software" /><category term="freedom of the press foundation" /><category term="open source" /><category term="trevor timm" /><summary type="html"><![CDATA[In order to serve its purpose at all, encryption and secure communications software has to be single-mindedly dedicated to protecting and promoting its user’s interest. In the real world, that dedication can be subverted in a handful of ways. Broadly speaking, these failures can come from with technical problems, or from the developer’s interest being misaligned with the user’s.]]></summary></entry><entry><title type="html">HOWTO: Graph your GPG keyring</title><link href="http://localhost:4000/dotnet/2014/02/howto-graph-your-gpg-keyring/" rel="alternate" type="text/html" title="HOWTO: Graph your GPG keyring" /><published>2014-02-06T01:44:46-05:00</published><updated>2014-02-06T01:44:46-05:00</updated><id>http://localhost:4000/dotnet/2014/02/howto-graph-your-gpg-keyring</id><content type="html" xml:base="http://localhost:4000/dotnet/2014/02/howto-graph-your-gpg-keyring/"><![CDATA[<p>We had a keysigning party at work today, and after it finished a few of us were looking for a way to visualize the newly increased signature density. It turns out the best tool for the job is called <a href="http://www.chaosreigns.com/code/sig2dot/">sig2dot</a>, which is available in the Debian repositories (and as a Perl script on its homepage).</p>

<p>Just make sure your keychain is refreshed with the most up-to-date keys (that’s just <code class="language-plaintext highlighter-rouge">gpg --refresh-keys</code>), and then run the script to create a file in <a href="https://en.wikipedia.org/wiki/DOT_language">the DOT language</a>. I had to download the script itself, so I ran:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ gpg --list-sigs | ./sig2dot.pl &gt; keyring.dot
</code></pre></div></div>

<p>Then, you can use one of a number of programs to render a visual file out of <code class="language-plaintext highlighter-rouge">keyring.dot</code>. If you have the package <code class="language-plaintext highlighter-rouge">graphviz</code> installed, you can use its <code class="language-plaintext highlighter-rouge">dot</code> command, or the <code class="language-plaintext highlighter-rouge">neato</code> command, which behave differently. Here are examples from my own key ring of the two programs in action:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ dot -Tpng keyring.dot &gt; keyring.dot.png
</code></pre></div></div>

<p><img src="https://parkerhiggins.net/wp-content/uploads/2014/02/gphkeyring.dot_.small_.png" alt="Keyring rendered by dot, small" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ neato -Tpng keyring.dot &gt; keyring.neato.png
</code></pre></div></div>

<p><img src="https://parkerhiggins.net/wp-content/uploads/2014/02/gphkeyring.neato_.small_.png" alt="Keyring rendered by neato, small" /></p>

<p>In both cases, I’ve reduced the size of the graph a lot intentionally so the names are unreadable, but I’m looking at them locally at full size. In each case I’m the bright pink node in the middle. In the second graph, the keysigning party is clear as the dense patch in the top.</p>]]></content><author><name>Parker Higgins</name></author><category term="Uncategorized" /><category term="crypto" /><category term="encryption" /><category term="howto" /><summary type="html"><![CDATA[We had a keysigning party at work today, and after it finished a few of us were looking for a way to visualize the newly increased signature density. It turns out the best tool for the job is called sig2dot, which is available in the Debian repositories (and as a Perl script on its homepage).]]></summary></entry><entry><title type="html">Implementing a CryptoParty Oneself</title><link href="http://localhost:4000/dotnet/2012/11/implementing-a-cryptoparty-oneself/" rel="alternate" type="text/html" title="Implementing a CryptoParty Oneself" /><published>2012-11-19T04:01:17-05:00</published><updated>2012-11-19T04:01:17-05:00</updated><id>http://localhost:4000/dotnet/2012/11/implementing-a-cryptoparty-oneself</id><content type="html" xml:base="http://localhost:4000/dotnet/2012/11/implementing-a-cryptoparty-oneself/"><![CDATA[<p>There’s an important rule in the cryptography world: you should never implement it yourself. So much can go wrong in the implementation of a crypto-system that you’d better leave it up to experts. Funny, then, that <a href="https://twitter.com/starchy/status/269879585741615104">exactly the opposite rule applies to planning CryptoParties</a>.</p>

<p>Saturday I hosted the first CryptoParty SF at Mozilla’s San Francisco headquarters, where for a few hours a few dozen people got together and participated in lectures, discussions, and workshops about privacy, security, and cryptography. It was fun, and I think people enjoyed it, but there are a lot of things I plan to improve the next time around. Here are some of my thoughts about the event:</p>

<ul>
  <li>We had a limit on the size of the gathering because of the venue — 100 people — and we were able to hit that many registrations without much promotion at all. But in retrospect I realize that we needed to focus on not just hitting a certain number of participants, but also making sure the right people find out about it. In fact, it’s not much of a surprise that the people who find out about an event like CryptoParty without you doing outreach are crypto nerds. It’s great that they want to attend, but it would’ve been nice to get more people who were curious and not yet experts.</li>
  <li>Building on that point: there’s a risk of making too onerous a registration process, but it would have been very nice to get an impression of how much background participants had in cryptography. Primarily to give that information to the speakers, who could have shaped their talks better. Unfortunately, several of the speakers expressed concern to me during and after Saturday’s event that the talk they prepared was too basic for the audience. I actually think every talk went smoothly, but it’s unfair to put the speakers in that position.</li>
  <li>There’s no substitute for planning and preparing. Yes, this is a general event tip, but it applies here. I did a pretty poor job of lining things up in advance, and I was very lucky that things went as smoothly as they did. In large part, that smoothness was due to really talented and generous speakers who were willing to be flexible and work with me on short notice. But no matter how hard you work in the few days leading up to an event, you can’t beat talking with presenters well in advance and doing real event promotion for a few weeks or months.</li>
  <li>That said, everybody in the room wanted the event to succeed. That’s a lifesaver. I really owe great thanks to not only the presenters but really the attendees, who were all on board and excited. It’s easy to get worried about an adversarial crowd — fortunately that wasn’t what I was facing.</li>
</ul>

<p>Had CryptoParty SF failed it would have been my fault, but that it was (more-or-less) successful really falls on many others. Thanks to Tom Lowenthal at Mozilla who helped with organization, motivation, and providing a venue; to my colleague Micah Lee who built the registration site and provided all kinds of support; to all of the fantastic speakers (aestetix, Marcia Hofmann, Morgan Marquis-Boire, Eva Galperin, Lee from the Guardian Project, Seth Schoen, starchy, and Quinn Norton) who gave such great presentations; to <a href="https://twitter.com/Asher_Wolf">Asher Wolf</a> for hatching a pretty wonderful idea for an event series; and of course to all the people who came out to participate in this crazy experiment.</p>

<p>I’m already buzzing on a follow-up event, which I think will take place in January. More details, as they say, to come.</p>]]></content><author><name>Parker Higgins</name></author><category term="Uncategorized" /><category term="asher wolf" /><category term="crypto" /><category term="cryptoparty" /><category term="san francisco" /><summary type="html"><![CDATA[There’s an important rule in the cryptography world: you should never implement it yourself. So much can go wrong in the implementation of a crypto-system that you’d better leave it up to experts. Funny, then, that exactly the opposite rule applies to planning CryptoParties.]]></summary></entry><entry><title type="html">Stanford Cryptography and #CryptoParty</title><link href="http://localhost:4000/dotnet/2012/08/stanford-cryptography-and-cryptoparty/" rel="alternate" type="text/html" title="Stanford Cryptography and #CryptoParty" /><published>2012-08-24T01:30:00-04:00</published><updated>2012-08-24T01:30:00-04:00</updated><id>http://localhost:4000/dotnet/2012/08/stanford-cryptography-and-cryptoparty</id><content type="html" xml:base="http://localhost:4000/dotnet/2012/08/stanford-cryptography-and-cryptoparty/"><![CDATA[<p>I recently finished the free online <a href="https://class.coursera.org/crypto">Stanford cryptography course</a> offered through Coursera and taught by Dan Boneh. It’s a challenging class, with at least four hours of lectures a week, and it actually took me two attempts to get all the way through it. I’m really glad I did though: cryptography is a tremendously empowering subject, and learning the theoretical foundation can be not just educational but inspirational. In one early lecture, Boneh lays out a basic tenet that really spoke to me:</p>

<blockquote>
  <p>There’s a very central theorem in crypto, and it really is quite a surprising fact, that says that any computation you’d like to do, any function F you’d like to compute, that you can compute with a trusted authority, you can also do without a trusted authority. …</p>

  <p>Instead, what the parties are gonna do, is they’re gonna talk to one another using some protocol, such that at the end of the protocol all of the sudden the value of the function becomes known to everybody.</p>
</blockquote>

<p>Boneh is talking, in this example, about elections and private auctions, but the broader message is striking. Any function that’s possible with an authority is possible without one. Any group can devise a method for communicating internally and producing results without a requirement to put trust in a party on the outside.</p>

<p>This central theorem gave me new perspective on the connection between anarchy and cypherpunks. I knew that the government classified crypto technology as a munition during the “crypto wars” of the ’80s and ’90s, but I’d always assumed that the government feared its use to assist in acts of violence. I realize now how much more subversive it can be.</p>

<p>I had looked in the wrong place of Weber’s model of governmental authority as a <a href="https://en.wikipedia.org/wiki/Monopoly_on_violence">monopoly on the legitimate use of physical force</a>; while the government could claim to be concerned about crypto’s use in creating violence, it may have really been worried about its undermining the government’s monopoly on legitimacy. Any function that’s possible with an authority is possible without one.</p>

<p>The rest of the class was interesting as well, and the math involved feels clever but simple, complex but not complicated. I recommend it to anybody who’s given some thought to cryptography but wants to know more.</p>

<p>Of course, for some purposes a full class on cryptography is total overkill. It’s useful to gain a more complete understanding of the theoretical background, but for most it suffices simply to be literate. For everybody, but especially for people in high-risk situations — people who face threats from sophisticated, even state-level attackers — it’s important to know how to use the sophisticated tools that are available.</p>

<p>That, so far as I understand it, is the genesis of <a href="https://twitter.com/Asher_Wolf/status/238389782634459136">#CryptoParty</a>. It’s a set of global get-togethers where more experienced users can teach beginners how to use the commonly available tools that tap into the incredibly powerful technology of cryptography. I hope that a beginner walks away from a #CryptoParty with an understanding of not just PGP, OTR, and the like, but with an idea of why threat models are important, what attack vectors she ought to consider, and — most importantly — a network of people and resources she can contact for even more knowledge.</p>

<p>As far as I know, #CryptoParty is still less than 48 hours old, but it’s popping up with events all over the world. I’m planning to get together the SF chapter, if you can help with that, please drop me a line!</p>]]></content><author><name>Parker Higgins</name></author><category term="Uncategorized" /><category term="crypto" /><category term="cryptoparty" /><category term="dan boneh" /><category term="encryption" /><category term="stanford" /><summary type="html"><![CDATA[I recently finished the free online Stanford cryptography course offered through Coursera and taught by Dan Boneh. It’s a challenging class, with at least four hours of lectures a week, and it actually took me two attempts to get all the way through it. I’m really glad I did though: cryptography is a tremendously empowering subject, and learning the theoretical foundation can be not just educational but inspirational. In one early lecture, Boneh lays out a basic tenet that really spoke to me:]]></summary></entry></feed>