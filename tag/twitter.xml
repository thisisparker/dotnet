<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="https://thisisparker.github.io/dotnet/tag/twitter.xml" rel="self" type="application/atom+xml" /><link href="https://thisisparker.github.io/dotnet/" rel="alternate" type="text/html" /><updated>2022-09-18T17:42:42-04:00</updated><id>https://thisisparker.github.io/dotnet/tag/twitter.xml</id><title type="html">parker higgins dot net</title><subtitle></subtitle><author><name>Parker Higgins</name></author><entry><title type="html">Shutting down @LinkArchiver, the Twitter link backup bot</title><link href="https://thisisparker.github.io/dotnet/2018/08/shutting-down-linkarchiver-the-twitter-link-backup-bot/" rel="alternate" type="text/html" title="Shutting down @LinkArchiver, the Twitter link backup bot" /><published>2018-08-26T18:13:52-04:00</published><updated>2018-08-26T18:13:52-04:00</updated><id>https://thisisparker.github.io/dotnet/2018/08/shutting-down-linkarchiver-the-twitter-link-backup-bot</id><content type="html" xml:base="https://thisisparker.github.io/dotnet/2018/08/shutting-down-linkarchiver-the-twitter-link-backup-bot/"><![CDATA[<p>After a little over a year of service, @LinkArchiver, the Twitter bot that <a href="https://parkerhiggins.net/2017/07/linkarchiver-a-new-bot-to-back-up-tweeted-links/">automatically made Internet Archive backups</a> of the links you tweeted, has archived its last link. In that time it archived somewhere around 7.2 million links total from about 9,000 users.((“Quote tweets” are treated like links to tweets, and constituted about a third of the total links. Something like 4.8 million links backed up were at domains other than Twitter.)) The last link it archived was <a href="http://www.latimes.com/local/lanow/la-me-ln-data-throttling-20180822-story.html">this LA Times story about Verizon throttling California firefighters</a>, <a href="https://twitter.com/elizs/status/1032644299144527872">tweeted on Thursday morning</a>.</p>

<p>LinkArchiver stopped working this week when <a href="https://twittercommunity.com/t/details-and-what-to-expect-from-the-api-deprecations-this-week-on-august-16-2018/110746">Twitter turned off the User Stream API</a> that it relied on. Under the hood, LinkArchiver was only looking at its timeline, so it could use Twitter’s built-in following features to make its user list. Since that API change, it can’t pull down a “stream” of its timeline, and so would have to be redesigned to continue to work.</p>

<p>Even as this project is shutting down, I consider it a pretty major success. I am very grateful to Jacob Hoffman-Andrews for <a href="https://twitter.com/j4cob/status/883054720260087808">pitching me the underlying idea</a>. Writing <a href="https://github.com/thisisparker/linkarchiver/">the code</a> (and seeing it get an enthusiastic reception) was a great way to kick off my time at Recurse Center last summer. I’m also grateful to Ben Cotton who gave it a <a href="https://opensource.com/article/17/7/linkarchiver-automatically-submits-links-internet-archive">nice write-up at opensource.com</a> when it launched.</p>

<p>I’ve had a few people ask me about archiving and backup options now that this is no longer available. I’m considering doing something similar for Mastodon, or for plain RSS feeds, but I also don’t want to downplay the fact that Internet Archive does a very good job of running the Wayback Machine crawler, and so the main value I can add is adding a personal layer. In any future work on things like LinkArchiver, I’d want to keep track of that.</p>

<p>There’s also a way to do a Twitter redesign with existing APIs, probably. Instead of getting a stream from Twitter that pinged on new tweet events, it could request new tweets at regular intervals, using an API that’s still operational. If somebody wants to write that, they’re welcome to, but <a href="https://slate.com/technology/2018/08/twitters-new-developer-guidelines-might-end-fun-bot-accounts.html">given the way Twitter is</a>, I’m not eager to do so.</p>]]></content><author><name>Parker Higgins</name></author><category term="Uncategorized" /><category term="bots" /><category term="programming" /><category term="twitter" /><summary type="html"><![CDATA[After a little over a year of service, @LinkArchiver, the Twitter bot that automatically made Internet Archive backups of the links you tweeted, has archived its last link. In that time it archived somewhere around 7.2 million links total from about 9,000 users.((“Quote tweets” are treated like links to tweets, and constituted about a third of the total links. Something like 4.8 million links backed up were at domains other than Twitter.)) The last link it archived was this LA Times story about Verizon throttling California firefighters, tweeted on Thursday morning.]]></summary></entry><entry><title type="html">Twitter should allow users to “hide” old tweets: my correct opinion</title><link href="https://thisisparker.github.io/dotnet/2018/08/twitter-should-allow-users-to-hide-old-tweets-my-correct-opinion/" rel="alternate" type="text/html" title="Twitter should allow users to “hide” old tweets: my correct opinion" /><published>2018-08-05T15:29:02-04:00</published><updated>2018-08-05T15:29:02-04:00</updated><id>https://thisisparker.github.io/dotnet/2018/08/twitter-should-allow-users-to-hide-old-tweets-my-correct-opinion</id><content type="html" xml:base="https://thisisparker.github.io/dotnet/2018/08/twitter-should-allow-users-to-hide-old-tweets-my-correct-opinion/"><![CDATA[<p>Twitter should allow users to “hide” old tweets so that they are only visible to that user, and selectively “un-hide” individual tweets from that collection so that they once again become available at their original URL, in quote tweets and threads, and in sites where they are embedded around the web.</p>

<p>The need for a mechanism to remove old tweets is very clear and becoming abundantly moreso with <a href="https://www.mediamatters.org/blog/2018/07/27/In-their-own-words-the-online-far-rights-motive-to-dig-up-liberal-figures-old-tweets-reven/220827">every rightwing campaign trawling for old statements to weaponize</a> by taking out of context. Numerous guides have been written about how and why to delete your tweets, and it’s beyond the scope of the argument I’m making today. Many of these guides, too, address the emotional difficulty of actually pulling the trigger and wiping an archive—in many cases spanning a decade or so of interaction.</p>

<p>One of the best encapsulations of this problem (and that solution) is John Herrman’s Awl 2015 piece <a href="https://www.theawl.com/2015/08/time-is-a-privacy-setting/">“Time Is a Privacy Setting.”</a> Even just the phrase in the headline is an important contribution, and gets at why simple dichotomies of “public” and “private” are so unsatisfying. A lot more goes into our understanding of privacy than a binary toggle, and time is certainly a factor.</p>

<p>And just as interesting, to me, is something Herrman said this week, in a tweet thread that began with his a link to that now three-year-old essay: <a href="https://web.archive.org/web/20180805181404/https:/twitter.com/jwherrman/status/1024402382615142405">“You thought you were talking, but you were writing.”</a> It’s true! Twitter has managed, for many people, to clear out a barrier that can otherwise be insurmountable, letting people be comfortable writing down their thoughts and conversations. Something the tweet-deleters flirt with, but never seem to quite put their finger on, is that writing (as opposed to talking) has some real advantages in addition to the drawbacks.<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup></p>

<p>This observation is obviously not new to Twitter. My father, a writer, has always exhorted me to keep a journal or a diary, though I’ve never really been able to. One real value of Twitter, for me, has been breaking through that hesitation by setting the threshold of participation so incredibly low that I can just, y’know, write. It’d be better to keep a journal or to blog, but in many cases tweets are good enough.</p>

<p>Over the decade that I’ve been on Twitter, I’ve gone through periods of prolific writing and total dry spells. I’ve maintained this blog regularly at times, and at others it’s sat dormant for months. And the thing is, I frequently refer to and read the old entries for time periods where they exist! Human memory is fickle and fragile, and it is genuinely interesting and educational for me to look back on old writing and see the germs of ideas that later grew into real passions. Looking up old tweets isn’t quite as good, but it fills in the gaps.</p>

<p>Beyond just lowering the threshold to producing such writing, Twitter did some important things to make online writing even more valuable. Search, the villain in recent sagas, is a powerful tool when used for good. Joanne McNeil recently raised a use case I love:</p>

<blockquote class="twitter-tweet"><p lang="en" dir="ltr">One of my favorite things things to do on twitter is search my friends’ old tweets for their reactions over the years to whatever film or book I just finished</p>&mdash; joanne mcneil (@jomc) <a href="https://twitter.com/jomc/status/1025085686947430401?ref_src=twsrc%5Etfw">August 2, 2018</a></blockquote>
<script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>I do that too! Yes, it’d be great if all my friends blogged about every movie they watched or book they read (and I had a good way of finding those posts when they became relevant to me), but this is a decent runner-up. If you want, too, you can see first interactions with people who later became important to you, or <a href="https://waxy.org/2015/12/tracking_the_trump_is_a_comment_section_running_for_president_joke/">all the people who’ve made a joke</a> you just thought of, or people discussing an article you’ve just read, and Twitter (helpfully, in this case) collapses the time gap between you and those people.</p>

<p>Beyond that, Twitter puts a time stamp and a URL on each of these things. In recent years it even preserves the semantics of threads. I don’t want to downplay the very real harm these attributes can cause, but it’s also true that in some situations they provide a ton of value.</p>

<p>Which brings us back to tweet deletion and why it is emotionally difficult for people to do. For better or for worse, this archive we’ve created of our own writing is valuable, and deleting tweets is permanent. (<a href="https://www.wired.com/story/im-deleting-all-my-old-tweets/">Emily Dreyfuss’ article at Wired</a> does an especially good job at grappling with it.) Every guide I’ve read to deleting tweets walks through the process of creating an “archive,” but even doing so misses some of these benefits of keeping old tweets online.</p>

<p>Archiving-then-deleting may preserve a copy for you, but it permanently rips each tweet out of its context in threads, at a URL, within quote tweets, embedded in articles, and in the Search index.<sup id="fnref:2" role="doc-noteref"><a href="#fn:2" class="footnote" rel="footnote">2</a></sup> Maybe you want to do all those things, and you should have the power to do so! But with a corpus of tens of thousands of tweets, in many cases, it is overwhelming to permanently make that decision for everything all at once.</p>

<p>(Side note: that permanence is in large part a result of Twitter’s centralization. Under a more decentralized model,<sup id="fnref:3" role="doc-noteref"><a href="#fn:3" class="footnote" rel="footnote">3</a></sup> where we controlled our own domains, you could maybe just rebuild your database from a backup and point all the right URLs to all the right content. There’s pros and cons to such centralization—and in particular, people seem to love the guarantee that the archive hasn’t been tampered with—but in any case that’s the situation we’re in and what can you do.)</p>

<p>So here’s the solution, referred to up top. Twitter should give users a new option to “hide” old tweets, which would look to every other user like deletion, but which would be a reversible operation. Your hidden tweets should still appear in your searches and views of old threads, but greyed out to indicate they’re not otherwise available. And—and this is probably the hardest part—Twitter should introduce a per-tweet configurability for these settings.</p>

<p>That’s the kicker. Individual tweets could be deleted (fully gone), hidden (just for you), private (for your followers, no retweets), or public. That would be a big change! But it’s important.</p>

<p>(Another side note: when I posted this opinion on Twitter, I got a few responses that such an option should not be available for public figures or politicians or what-have-you. I tend to think that we should not rely on Twitter to preserve these public records, and that their introduction of a feature that has real benefits to real users shouldn’t be hindered by the possible exploitation by shifty officials. And just as with <a href="https://theconversation.com/donald-trumps-tweets-are-now-presidential-records-71973">deleting tweets</a> or <a href="https://www.nytimes.com/2018/05/23/business/media/trump-twitter-block.html">blocking critics</a>, the behavior can be barred without Twitter needing to intervene.)</p>

<p>Twitter the company has mismanaged Twitter the product in a dozen different ways, and its policies on speech, censorship, harassment, and abuse have often been incoherent. It’s also provided an invaluable platform for many of my favorite writers and thinkers, and done so in a way that is reasonably consistent with the technology of the web.<sup id="fnref:4" role="doc-noteref"><a href="#fn:4" class="footnote" rel="footnote">4</a></sup> Giving users more tools—in this case a new privacy setting with more granularity—is the right next step in overcoming the former without diminishing the latter.</p>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p>By definition, most of the articles about deleting tweets are written by writers. Writers, again by definition, tend to write more stuff down. So maybe the benefits of having a place to write stuff down if you otherwise wouldn’t isn’t quite as clear to them. <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
    <li id="fn:2" role="doc-endnote">
      <p>Beyond that, there’s no easy way to present your archive on your own terms to anybody but yourself, a <a href="https://parkerhiggins.net/2017/04/building-mastodon-frozen/">feature I’ve argued for in other contexts</a>. <a href="#fnref:2" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
    <li id="fn:3" role="doc-endnote">
      <p>Check out <a href="https://joinmastodon.org/">Mastodon</a>. <a href="#fnref:3" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
    <li id="fn:4" role="doc-endnote">
      <p>Two good things that stand out: canonical URLs for every tweet, and the fact that unavailable embedded tweets degrade gracefully into text. On the other hand, the normalization and ubiquitous use of a URL shortener sucks. <a href="#fnref:4" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name>Parker Higgins</name></author><category term="Uncategorized" /><category term="mastodon" /><category term="privacy" /><category term="twitter" /><category term="writing" /><summary type="html"><![CDATA[Twitter should allow users to “hide” old tweets so that they are only visible to that user, and selectively “un-hide” individual tweets from that collection so that they once again become available at their original URL, in quote tweets and threads, and in sites where they are embedded around the web.]]></summary></entry><entry><title type="html">Pulling free and open weather data</title><link href="https://thisisparker.github.io/dotnet/2017/09/pulling-free-and-open-weather-data-in-python/" rel="alternate" type="text/html" title="Pulling free and open weather data" /><published>2017-09-22T16:41:19-04:00</published><updated>2017-09-22T16:41:19-04:00</updated><id>https://thisisparker.github.io/dotnet/2017/09/pulling-free-and-open-weather-data-in-python</id><content type="html" xml:base="https://thisisparker.github.io/dotnet/2017/09/pulling-free-and-open-weather-data-in-python/"><![CDATA[<p>When I decided to add realtime weather effects to <a href="https://www.twitter.com/choochoobot">@choochoobot</a>, I knew there were a few qualities I wanted to find in a data source. Ideally I would find something free and reliable that didn’t require me to agree to many developer terms or sign up for an API token. Google <a href="https://www.programmableweb.com/news/google-weather-api/2012/08/28">shuttered its undocumented Weather API</a> in 2012, and Yahoo’s offering, which has changed a few times over the years, now requires an account and a consumer key and secret.</p>

<p>It took some poking around but I was eventually successful, and now @choochoobot should correctly show clouds, rain, snow, or thunderstorms, depending on whether observations in New York at the moment it’s tweeting.</p>

<p><img src="https://parkerhiggins.net/wp-content/uploads/2017/09/Screenshot_2017-09-22_15-46-34.png" alt="" /></p>

<p>Current observed weather conditions seems to me like something that should be provided by the government as open data. Fortunately, that intuition was correct: free realtime weather data is openly available, if you know where to look.</p>

<p>The National Weather Service, an agency within NOAA, provides weather observations from stations all over the US in RSS and parseable XML formats. And while parsing XML in Python isn’t exactly pleasant, it’s straightforward enough and I am now able to get qualitative descriptions of the current weather that I can translate into emoji. Here’s <a href="https://github.com/thisisparker/choochoobot/blob/master/choochoogen.py#L62-L86">the relevant code</a>, and here’s how it works:</p>

<ul>
  <li>Each time @choochoobot tweets, it checks to see whether it’s daytime or nighttime. If it’s nighttime, I skip the weather check and instead calculate the phase and placement of the moon in the sky.</li>
  <li>If it’s during the day, I make download the <a href="http://w1.weather.gov/xml/current_obs/KNYC.xml">XML file provided by the KNYC weather station</a> in Central Park. You can load the same file in your browser at any point, but you probably have to view-source to see it in a reasonable human-readable format. That’s one of about <a href="http://w1.weather.gov/xml/current_obs/">1,800 locations in US states and territories</a> that the NWS provides information for.</li>
  <li><span class="citation">@choochoobot</span> then parses the XML file using Python’s built-in <a href="https://docs.python.org/3.5/library/xml.etree.elementtree.html">ElementTree XML API</a>. The relevant field for my purposes is labeled “weather”, which contains a text description of the observed conditions.</li>
  <li>At least in theory, that phrase will always be one of the 250 or so pre-set descriptions <a href="http://w1.weather.gov/xml/current_obs/weather.php">provided by the the NWS</a>. These are sort of grouped into categories—there’s a pretty clear thunderstorm grouping, and one for hail—but it seems a bit ad hoc. My use requires classifying the observed weather into just four or five buckets with matching emoji; I just made a big list of terms that I’d take to mean “cloudy,” for example, and checked to see whether the observed weather phrase was on that list.</li>
  <li>Then I pick emoji for the sky, and put the whole tweet together. If the weather is cloudy, I replace the sun emoji with a sun-behind-clouds emoji. Real scientific stuff.</li>
</ul>

<p>In case it’s useful, I’ve converted the NWS list of <a href="https://github.com/dariusk/corpora/pull/278">weather conditions to JSON</a> and submitted it to Darius Kazemi’s corpora project. Once that gets merged in, those weather conditions will all be available that way.</p>]]></content><author><name>Parker Higgins</name></author><category term="Uncategorized" /><category term="bots" /><category term="howto" /><category term="programming" /><category term="python" /><category term="twitter" /><category term="weather" /><summary type="html"><![CDATA[When I decided to add realtime weather effects to @choochoobot, I knew there were a few qualities I wanted to find in a data source. Ideally I would find something free and reliable that didn’t require me to agree to many developer terms or sign up for an API token. Google shuttered its undocumented Weather API in 2012, and Yahoo’s offering, which has changed a few times over the years, now requires an account and a consumer key and secret.]]></summary></entry><entry><title type="html">“A Mind At Play” and Claude Shannon’s grave</title><link href="https://thisisparker.github.io/dotnet/2017/09/a-mind-at-play-and-claude-shannons-grave/" rel="alternate" type="text/html" title="“A Mind At Play” and Claude Shannon’s grave" /><published>2017-09-20T16:55:16-04:00</published><updated>2017-09-20T16:55:16-04:00</updated><id>https://thisisparker.github.io/dotnet/2017/09/a-mind-at-play-and-claude-shannons-grave</id><content type="html" xml:base="https://thisisparker.github.io/dotnet/2017/09/a-mind-at-play-and-claude-shannons-grave/"><![CDATA[<p>As the “father of information theory,” Claude Shannon’s contributions to the development of modern digital technology are hard to overstate. That work puts him in the ranks of the Einsteins, Turings, and Feynmans of the world; somehow, though, he never seemed to get the credit and public recognition that those scientists received.</p>

<p>A great new biography of Shannon, <a href="https://www.amazon.com/dp/B01M5IJN1P">“A Mind At Play,”</a> tells the story of his work and may provide an explanation. In contrast to the stereotype of a single-minded scholar who doggedly pursues a particular theory for an entire lifetime, Shannon seemed to hop around to whatever captured his imagination—and in more than a few cases, advanced the state of the art or provided entirely new frameworks with which to consider its thorniest problems. (I was fortunate enough to be sent a copy of this book by its author because I had <a href="https://twitter.com/xor/status/727008565278306304">previously posted about</a> a long <em>New Yorker</em> profile of Shannon commemorating the centennial of his birth.)</p>

<p>That professional pathway meant he probably never had a dull moment, but also that he wasn’t around to lead the fields he revolutionized. Beyond that, it makes it difficult to distill his work down to an equation, or even a few sentences. If you had to, though, you could do worse than his formulation of information as entropy. One fascinating detail from the end of “A Mind At Play” was that that equation appears on his grave stone at the <a href="https://en.wikipedia.org/wiki/Mount_Auburn_Cemetery">Mount Auburn Cemetery</a> in Cambridge where he’s buried.</p>

<blockquote>
  <p>What’s concealed, however, is a message on the reverse: covered by a bush, the open section of the marble on the back of the tombstone holds Shannon’s entropy formula.Shannon’s children had hoped the formula would grace the front of the stone; their mother thought it more modest to engrave it on the back.</p>

  <p>And so Claude Shannon’s resting place is marked by a kind of code: a message hidden from view, invisible except to those looking for it.</p>
</blockquote>

<p>This struck me as amazing, and I wanted to see how it was rendered. But, perhaps unsurprisingly, it is difficult to find a picture of the back of a tombstone—even one marking the grave of a person as notable as Claude Shannon. So <a href="https://twitter.com/xor/status/896411797447684096">I turned to Twitter</a>, posting that passage and asking if anybody in or around Cambridge was available to take a picture for me.</p>

<p>Fortunately, it seems many people were as intrigued by that detail as I was, and the tweet was pretty widely circulated. To my surprise and delight, a few groups of people reached out to tell me they were available to go, and a few more just set out for there. I had inadvertently prompted a small flashmob at the grave of a scientist who had passed some 16 years earlier.</p>

<blockquote>
  <p>There it is! <a href="https://t.co/wjz7PqxVeN">pic.twitter.com/wjz7PqxVeN</a></p>

  <p>— Space User 583 (@User583) <a href="https://twitter.com/User583/status/896496769923764224">August 12, 2017</a></p>
</blockquote>

<script async="" charset="utf-8" src="//platform.twitter.com/widgets.js"></script>

<p>The equation is in fact pretty well hidden, but a few folks were able to duck into the bush behind the grave and grab a shot. I love the way it looks, and I was very excited that this new book prompted me and a few nerds around the world to share a moment of appreciation for the great Claude Shannon over a network that his work made possible.</p>]]></content><author><name>Parker Higgins</name></author><category term="Uncategorized" /><category term="books" /><category term="claude shannon" /><category term="information theory" /><category term="twitter" /><summary type="html"><![CDATA[As the “father of information theory,” Claude Shannon’s contributions to the development of modern digital technology are hard to overstate. That work puts him in the ranks of the Einsteins, Turings, and Feynmans of the world; somehow, though, he never seemed to get the credit and public recognition that those scientists received.]]></summary></entry><entry><title type="html">New bot: @78_sampler, serving up old records</title><link href="https://thisisparker.github.io/dotnet/2017/08/new-bot-78_sampler-serving-up-old-records/" rel="alternate" type="text/html" title="New bot: @78_sampler, serving up old records" /><published>2017-08-11T13:36:49-04:00</published><updated>2017-08-11T13:36:49-04:00</updated><id>https://thisisparker.github.io/dotnet/2017/08/new-bot-78_sampler-serving-up-old-records</id><content type="html" xml:base="https://thisisparker.github.io/dotnet/2017/08/new-bot-78_sampler-serving-up-old-records/"><![CDATA[<p>The Internet Archive hosts an <a href="https://archive.org/details/georgeblood">incredible collection</a> of over 25,000 <a href="http://great78.archive.org/">professionally digitized 78rpm records</a>. The great thing about a catalog that large is that, if you know what you want, you’re likely to find it. On the other hand, if you just want to browse it can be overwhelming and even intimidating. Each item could possibly be a delight, but it’s difficult to even think about individual records in the face of such a huge archive.</p>

<p>In that sense, would-be browsers face similar challenges with the Great 78 Project as they do with the <a href="https://usdawatercolors.nal.usda.gov/pom/home.xhtml">Pomological Watercolor Collection</a>—an archive <a href="https://parkerhiggins.net/tag/pomological-watercolors/">I’ve worked with a lot</a>. Sensing that similarity, I decided to build a tool like <a href="https://twitter.com/pomological">@pomological</a> to help surface individual records.</p>

<p><span class="citation"><a href="https://twitter.com/78_sampler">@78_sampler</a> tweets every two hours with a randomly selected record from the Archive’s collection. It was important to me that the audio fit smoothly and natively into a Twitter timeline, so I decided to render each tune into a video file using the Archive’s still image of the record as the visual. Twitter limits videos to 2:20—exactly 140 seconds, cute—which is shorter than most 78 tunes, so while rendering the video I truncate the clip at that point with a short audio fade at the end.</span></p>

<p>The <a href="https://github.com/thisisparker/78_sampler">code to do all this</a> is a short Python script which I’ve posted online. It relies on ffmpeg to do the video encoding. Crafting ffmpeg commands is famously convoluted, and it’s a little frustrating to format those commands to be called from Python. Maybe that’s something I’ll do differently in the future but, for now, this works and I can dip my cup into the deep Archive well with a little more ease than before.</p>]]></content><author><name>Parker Higgins</name></author><category term="Uncategorized" /><category term="bots" /><category term="internet archive" /><category term="music" /><category term="programming" /><category term="python" /><category term="twitter" /><summary type="html"><![CDATA[The Internet Archive hosts an incredible collection of over 25,000 professionally digitized 78rpm records. The great thing about a catalog that large is that, if you know what you want, you’re likely to find it. On the other hand, if you just want to browse it can be overwhelming and even intimidating. Each item could possibly be a delight, but it’s difficult to even think about individual records in the face of such a huge archive.]]></summary></entry><entry><title type="html">LinkArchiver, a new bot to back up tweeted links</title><link href="https://thisisparker.github.io/dotnet/2017/07/linkarchiver-a-new-bot-to-back-up-tweeted-links/" rel="alternate" type="text/html" title="LinkArchiver, a new bot to back up tweeted links" /><published>2017-07-11T16:10:04-04:00</published><updated>2017-07-11T16:10:04-04:00</updated><id>https://thisisparker.github.io/dotnet/2017/07/linkarchiver-a-new-bot-to-back-up-tweeted-links</id><content type="html" xml:base="https://thisisparker.github.io/dotnet/2017/07/linkarchiver-a-new-bot-to-back-up-tweeted-links/"><![CDATA[<p>Twitter users who want to ensure that the Wayback Machine has stored a copy of the pages they link to can now sign up with <a href="https://twitter.com/linkarchiver"><span class="citation">@LinkArchiver</span></a> to make it happen automatically. <span class="citation">@LinkArchiver</span> is the first project I’ve worked on in my 12-week stay at <a href="https://www.recurse.com/">Recurse Center</a>, where I’m learning to be a better programmer.</p>

<p>The idea for <span class="citation">@LinkArchiver</span> was <a href="https://twitter.com/j4cob/status/883054720260087808">suggested by my friend Jacob</a>. I liked it because it was useful, relatively simple, and combined things I knew (Python wrappers for the Twitter API) with things I didn’t (event-based programming, making a process run constantly in the background, and more). I did not expect it to get as enthusiastic a reaction as it has, but that’s also nice.</p>

<p>The entire bot is <a href="https://github.com/thisisparker/linkarchiver/">one short Python script</a> that uses the Twython library to listen to the <a href="https://dev.twitter.com/streaming/userstreams">Twitter User stream API</a>. This is the first of my Twitter bots that is at all “interactive”—every previous bot used the REST APIs to post, but can not engage with things in their timeline or tweeted at them.</p>

<p>That change meant I had to use a slightly different architecture than I’ve used before. Each of my previous bots were small and self-contained scripts that produced a tweet or two each time they run. That design means I can trigger them with a cron job that runs at regular intervals. By contrast, <span class="citation">@LinkArchiver</span> runs all the time, listening to its timeline and acting when it needs to. It doesn’t have much interactive behavior—when you tweet at it directly, it can reply with a Wayback link, but that’s it—but learning this kind of structure will enable me to do much more interactive bots in the future.</p>

<p>It also required that I figure out how to “daemonize” the script, so that it could run in the background when I wasn’t connected and restart in case it crashed (or when I restart the computer). I found this aspect surprisingly difficult; it seems like a really basic need, but the documentation for how to do this was not especially easy to find. I host my bots on a Digital Ocean box running Ubuntu, so this script is running as a systemd service. The <a href="https://www.digitalocean.com/community/tutorials/how-to-use-systemctl-to-manage-systemd-services-and-units">Digital Ocean documentation</a> and this <a href="https://www.reddit.com/r/raspberry_pi/comments/4vhofs/creating_a_systemd_daemon_so_you_can_run_a_python/">Reddit tutorial</a> were both very helpful for my figuring it out.</p>

<p>Since launching the bot, I’ve gotten in touch with the folks at the Wayback Machine, and at their request added a custom user-agent. I was worried that the bot would get on their nerves, but they seem to really appreciate it—what a relief. After its first four days online, it’s tracking some 3,400 users and has sent about 25,000 links to the Internet Archive.</p>]]></content><author><name>Parker Higgins</name></author><category term="Uncategorized" /><category term="archives" /><category term="bots" /><category term="internet archive" /><category term="programming" /><category term="python" /><category term="twitter" /><summary type="html"><![CDATA[Twitter users who want to ensure that the Wayback Machine has stored a copy of the pages they link to can now sign up with @LinkArchiver to make it happen automatically. @LinkArchiver is the first project I’ve worked on in my 12-week stay at Recurse Center, where I’m learning to be a better programmer.]]></summary></entry><entry><title type="html">New Twitter bot after artist Gerhard Richter</title><link href="https://thisisparker.github.io/dotnet/2017/01/new-twitter-bot-artist-gerhard-richter/" rel="alternate" type="text/html" title="New Twitter bot after artist Gerhard Richter" /><published>2017-01-26T13:06:35-05:00</published><updated>2017-01-26T13:06:35-05:00</updated><id>https://thisisparker.github.io/dotnet/2017/01/new-twitter-bot-artist-gerhard-richter</id><content type="html" xml:base="https://thisisparker.github.io/dotnet/2017/01/new-twitter-bot-artist-gerhard-richter/"><![CDATA[<p>This week I went to the SFMOMA for the first time. It’s great! I spent hours there and felt like I had to rush to see even a fraction of the collection. One of the pieces that really struck me was <a href="https://www.sfmoma.org/artwork/FC.643">Gerhard Richter’s massive 1974 painting “256 Colors”</a> (or “256 Farben” in his original German). I took a picture of it there:</p>

<p><a href="https://parkerhiggins.net/wp-content/uploads/2017/01/img_3465-1.jpg"><img src="https://parkerhiggins.net/wp-content/uploads/2017/01/img_3465-1.jpg" alt="" /></a><br />
He made a few “256 Colors” and a bunch of other color charts, some of which are more explicitly generative—that is, where the colors and their arrangement are left to chance.</p>

<p>Anyway, that sounded like fun, so I’ve put together a <a href="https://github.com/thisisparker/256farben">small script that creates paintings</a> that look a bit like “256 Colors.” Here’s one that it made:</p>

<p><img src="https://parkerhiggins.net/wp-content/uploads/2017/01/render-1024x555.png" alt="" /></p>

<p>And naturally, I’ve made a Twitter bot that posts them twice a day: <a href="https://twitter.com/256farben">@256farben</a>. Follow along for two daily reminders of the beauty of randomness.</p>]]></content><author><name>Parker Higgins</name></author><category term="Uncategorized" /><category term="art" /><category term="bots" /><category term="gerhard richter" /><category term="painting" /><category term="twitter" /><summary type="html"><![CDATA[This week I went to the SFMOMA for the first time. It’s great! I spent hours there and felt like I had to rush to see even a fraction of the collection. One of the pieces that really struck me was Gerhard Richter’s massive 1974 painting “256 Colors” (or “256 Farben” in his original German). I took a picture of it there:]]></summary></entry><entry><title type="html">New bot: @i_remember_txt, tweeting Joe Brainard’s “I Remember” (1975)</title><link href="https://thisisparker.github.io/dotnet/2017/01/new-bot-i-remember-txt-joe-brainard-i-remember/" rel="alternate" type="text/html" title="New bot: @i_remember_txt, tweeting Joe Brainard’s “I Remember” (1975)" /><published>2017-01-23T23:31:55-05:00</published><updated>2017-01-23T23:31:55-05:00</updated><id>https://thisisparker.github.io/dotnet/2017/01/new-bot-i-remember-txt-joe-brainard-i-remember</id><content type="html" xml:base="https://thisisparker.github.io/dotnet/2017/01/new-bot-i-remember-txt-joe-brainard-i-remember/"><![CDATA[<p>Joe Brainard’s 1975 book “I Remember” is an incredible work of poetry. The New Yorker called it <a href="http://www.newyorker.com/magazine/2008/11/03/the-nancy-book">“his miniaturist memoir-poem,”</a> and Paul Auster’s blurb for the 2001 edition gives a good sense of it:</p>

<blockquote>
  <p><em>I Remember</em> is a masterpiece. One by one, the so-called important books of our time will be forgotten, but Joe Brainard’s modest little gem will endure. In simple, forthright, declarative sentences, he charts the map of the human soul and permanently alters the way we look at the world. <em>I Remember</em> is both uproariously funny and deeply moving. It is also one of the few totally original books I have ever read.</p>
</blockquote>

<p>Those simple declarative sentences—almost all of which begin with “I remember…”—would have been a shock as a book, but today they have the strange familiarity of status updates from your most nostalgic friend.</p>

<p>So when Avery Trufelman asked <a href="https://twitter.com/trufelman/status/820687962266402816">if somebody could make a bot</a> that tweeted his “memories,” I jumped at the chance. And the resulting bot, <a href="https://twitter.com/i_remember_txt">@i_remember_txt</a>, fits in great in between other tweets.</p>

<p><a href="https://twitter.com/i_remember_txt/status/823404900193181696"><img src="https://parkerhiggins.net/wp-content/uploads/2017/01/Screenshot_2017-01-23_20-28-35.png" alt="" /></a></p>

<p>Per usual, <a href="https://github.com/thisisparker/i-remember-txt">the code is online</a> and comments are welcome. It’s pretty straightforward. One thing I did this time which was pretty cool: in the case of memories that were longer than a single tweet, it does <a href="https://twitter.com/i_remember_txt/status/822229699153645568">threaded “tweetstorms”</a> of up to 4-5 in a row.</p>]]></content><author><name>Parker Higgins</name></author><category term="Uncategorized" /><category term="avery trufeman" /><category term="bots" /><category term="joe brainard" /><category term="poetry" /><category term="programming" /><category term="python" /><category term="twitter" /><summary type="html"><![CDATA[Joe Brainard’s 1975 book “I Remember” is an incredible work of poetry. The New Yorker called it “his miniaturist memoir-poem,” and Paul Auster’s blurb for the 2001 edition gives a good sense of it:]]></summary></entry><entry><title type="html">Making ethical bots, over at Motherboard</title><link href="https://thisisparker.github.io/dotnet/2016/03/making-ethical-twitter-bots-motherboard/" rel="alternate" type="text/html" title="Making ethical bots, over at Motherboard" /><published>2016-03-28T01:48:06-04:00</published><updated>2016-03-28T01:48:06-04:00</updated><id>https://thisisparker.github.io/dotnet/2016/03/making-ethical-twitter-bots-motherboard</id><content type="html" xml:base="https://thisisparker.github.io/dotnet/2016/03/making-ethical-twitter-bots-motherboard/"><![CDATA[<p>To my tremendous honor, Sarah’s Motherboard article about <a href="https://motherboard.vice.com/read/how-to-make-a-not-racist-bot">instilling ethics in Twitter bots</a> quotes me in a few places. In particular, it recounts a story I hadn’t told publicly about a bot I didn’t make.</p>

<blockquote>
  <p>Recently, Higgins hoped to make an iterator bot out of turn-of-the-century popular music that had been digitized by the New York Public Library. But quite a lot of the scanned sheet music was, to say the least, <a href="http://digitalcollections.nypl.org/items/510d47df-eef6-a3d9-e040-e00a18064a99">extremely racist</a>. So he scrapped the whole idea. “It was acceptable at the time, but that’s not what I would want my bot to say,” said Higgins. Loosely paraphrasing Darius Kazemi, he said, “My bot is not me, and should not be read as me. But it’s something that I’m responsible for. It’s sort of like a child in that way—you don’t want to see your child misbehave.”</p>
</blockquote>

<p>The whole article is great, and the other botmakers she included are each an inspiration. Go read it!</p>]]></content><author><name>Parker Higgins</name></author><category term="Uncategorized" /><category term="bots" /><category term="motherboard" /><category term="sarah jeong" /><category term="twitter" /><category term="vice" /><summary type="html"><![CDATA[To my tremendous honor, Sarah’s Motherboard article about instilling ethics in Twitter bots quotes me in a few places. In particular, it recounts a story I hadn’t told publicly about a bot I didn’t make.]]></summary></entry><entry><title type="html">New bot: @choochoobot</title><link href="https://thisisparker.github.io/dotnet/2016/03/new-bot-choochoobot/" rel="alternate" type="text/html" title="New bot: @choochoobot" /><published>2016-03-14T02:58:31-04:00</published><updated>2016-03-14T02:58:31-04:00</updated><id>https://thisisparker.github.io/dotnet/2016/03/new-bot-choochoobot</id><content type="html" xml:base="https://thisisparker.github.io/dotnet/2016/03/new-bot-choochoobot/"><![CDATA[<p>It’s a goofy idea: After a few happy-hour drinks on Thursday, I decided to write a little Python script to make emoji “trains” of random length, combining the steam engine with the two styles of rail cars. Once I got that running, I <a href="http://www.cbc.ca/radio/spark/312-growth-and-the-start-up-economy-twitter-bot-art-and-more-1.3471294/these-bots-tweet-their-own-artwork-1.3471507">remembered reading</a> about Emma Winston’s <a href="https://twitter.com/thetinygallery">“Tiny Gallery” bot</a>, which tweets little scenes of generative emoji “art galleries.”</p>

<p>In fact, there’s a whole <a href="https://twitter.com/hugovk/lists/tiny-universe">“tiny universe” of bots</a> that tweet emoji scenes—most prominently, Katie Rose Pipkin’s amazing <a href="https://twitter.com/tiny_star_field">“tiny star fields”</a>. But as far as I could tell, none of them have trains. So I set to work putting my trains into some tiny landscapes, and quickly got something together.</p>

<blockquote>
  <p>🌕 <br />
 🌳 🌳 🌲 🌲<br />
 🌳 🐇 <br />
🚂🚋🚋🚋🚃🚋🚋🚋🚃🚃🚋<br />
🌲 🌲 🌲 <br />
 🌲 🌳 🌳 🌲 🌳</p>

  <p>— trains botting (@choochoobot) <a href="https://twitter.com/choochoobot/status/708336941586976768">March 11, 2016</a></p>
</blockquote>

<script async="" charset="utf-8" src="//platform.twitter.com/widgets.js"></script>

<p>Friday morning I “launched” the bot, by <a href="https://twitter.com/xor/status/708337788286992384">tweeting about it</a> from my own account. I’m not sure what reaction I expected, but it wasn’t this one: over the course of the next 24 hours, over a thousand people followed it. By 10 tweets in or so, it had surpassed <a href="https://twitter.com/pomological">@pomological</a> as my most popular bot. Over the weekend it climbed to 1,600 followers and it seems to still be on the rise.</p>

<blockquote>
  <p>☁<br />
 🌴 🌴 <br />
 🌴 🐢🐢 <br />
 🚂🚃🚃🚋🚃🚋🚃🚃🚋💨<br />
 🌴 🌴 <br />
🌊🌊🌊🌊🌊🌊🌊🌊🐙🌊🌊🌊</p>

  <p>— trains botting (@choochoobot) <a href="https://twitter.com/choochoobot/status/708759726922682369">March 12, 2016</a></p>
</blockquote>

<script async="" charset="utf-8" src="//platform.twitter.com/widgets.js"></script>

<p>Best of all though, I’m getting nice feedback from people speaking all different languages. That’s something I don’t usually get when I’m writing, but of course these “scenes”—if you can even call them that—are equally intelligible in any language. It feels really great to know that people around the world like this thing.</p>

<p>The <a href="https://github.com/thisisparker/choochoobot">source code is online</a>, and I’ll write up more of a how-to soon. More excitingly, I want to keep developing out the possibilities here. Even out of the idea phase, it’s still a goofy project, but it’s a fun canvas to explore some more elaborate ideas.</p>]]></content><author><name>Parker Higgins</name></author><category term="Uncategorized" /><category term="bots" /><category term="emoji" /><category term="programming" /><category term="python" /><category term="trains" /><category term="twitter" /><summary type="html"><![CDATA[It’s a goofy idea: After a few happy-hour drinks on Thursday, I decided to write a little Python script to make emoji “trains” of random length, combining the steam engine with the two styles of rail cars. Once I got that running, I remembered reading about Emma Winston’s “Tiny Gallery” bot, which tweets little scenes of generative emoji “art galleries.”]]></summary></entry></feed>