<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="https://thisisparker.github.io/dotnet/feed.xml" rel="self" type="application/atom+xml" /><link href="https://thisisparker.github.io/dotnet/" rel="alternate" type="text/html" /><updated>2022-09-18T17:29:15-04:00</updated><id>https://thisisparker.github.io/dotnet/feed.xml</id><title type="html">parker higgins dot net</title><subtitle></subtitle><author><name>Parker Higgins</name></author><entry><title type="html">New Rossword puzzle</title><link href="https://thisisparker.github.io/dotnet/2021/03/new-rossword-puzzle/" rel="alternate" type="text/html" title="New Rossword puzzle" /><published>2021-03-07T07:05:00-05:00</published><updated>2021-03-07T07:05:00-05:00</updated><id>https://thisisparker.github.io/dotnet/2021/03/new-rossword-puzzle</id><content type="html" xml:base="https://thisisparker.github.io/dotnet/2021/03/new-rossword-puzzle/"><![CDATA[<p><a href="https://coryarcangel.com/news/2010/08/sorry-i-havnt-posted">Sorry I Haven’t Posted</a> for a while!</p>

<p>I do of course intend to return to the blog, yadda yadda, lots of updates to share. One quick thing that merits an update <em>today</em> is that I’ve co-constructed a crossword puzzle with Ross Trudeau over at <a href="https://rosswordpuzzles.com/2021/03/07/babys-first-word">Rossword Puzzles</a>. Go check it out.</p>

<p>Ross is a mentor to many in the crossword world, and I’m lucky to have weaseled my way into that cohort through being friends with him. We also (and this should be the subject of another blog post! The inspiration is returning, see!) host a regular Twitch stream called <a href="https://www.twitch.tv/cursewordslive/">Cursewords Live</a>, which involves a lot of solving puzzles in <a href="https://parkerhiggins.net/2019/03/cursewords-crossword-puzzle-solving-interface-terminal/">my <code class="language-plaintext highlighter-rouge">cursewords</code> software</a>.</p>

<p>Ross and I previously co-constructed a Universal Sunday puzzle (<a href="https://parkerhiggins.net/wp-content/uploads/2021/03/usun210110.pdf">available as a PDF</a>) published on January 10 this year.</p>]]></content><author><name>Parker Higgins</name></author><category term="Uncategorized" /><category term="crosswords" /><category term="cursewords" /><category term="cursewords live" /><category term="ross trudeau" /><category term="twitch" /><summary type="html"><![CDATA[Sorry I Haven’t Posted for a while!]]></summary></entry><entry><title type="html">1923 zine and website launch</title><link href="https://thisisparker.github.io/dotnet/2019/03/1923-zine-and-website-launch/" rel="alternate" type="text/html" title="1923 zine and website launch" /><published>2019-03-23T14:24:45-04:00</published><updated>2019-03-23T14:24:45-04:00</updated><id>https://thisisparker.github.io/dotnet/2019/03/1923-zine-and-website-launch</id><content type="html" xml:base="https://thisisparker.github.io/dotnet/2019/03/1923-zine-and-website-launch/"><![CDATA[<p>Towards the beginning of this year I ran a <a href="https://www.kickstarter.com/projects/887675031/1923-a-monthly-zine-of-public-domain-treasures/description">Kickstarter campaign for a monthly zine</a> of archival material from the year 1923.</p>

<p>That year has some copyright and public domain significance. For twenty years following <a href="https://en.wikipedia.org/wiki/Copyright_Term_Extension_Act">the 1998 Copyright Term Extension Act</a>, 1922 was the most recent publication year for which a given work could be categorically determined to be in the public domain. That made “1922 and earlier” <a href="https://www.techdirt.com/articles/20151102/16255832697/copyright-terms-how-historical-journalism-is-disappearing.shtml">a common category for digitized databases</a> of older works. On January 1, that border advanced for the first time in two decades, and the zine is something of a celebration of that fact.</p>

<p>Anyway.</p>

<p>The zines sold out quickly—I only intended to offer a hundred subscriptions, which were snapped up in about two hours—and so I added a “digital subscription” option. That meant I would have to figure out how to distribute the zines digitally too, but I was probably going to want to do that anyhow.</p>

<p>I sent out and posted (for backers only) the first two issues together after the campaign closed in the beginning of February. This week I sent out and posted the third issue, and so I’ve removed the “paywall” for the first two.</p>

<p>Which means: you can now check out the January and Feburary issues of <em>1923</em> at <a href="https://1923.press/">1923.press</a>.</p>

<p>This has been a big endeavor for me, and I’ve had to learn a lot about a tiny area of publishing and fulfillment.</p>

<p>In the coming days I’m going to publish some notes about my zine-creating process, which I think is sort of idiosyncratic but may also be instructional. I’ve written a few scripts and one-liners to ease the process, and I’d love if those ended up being helpful to other zine makers!</p>]]></content><author><name>Parker Higgins</name></author><category term="Uncategorized" /><category term="copyright" /><category term="kickstarter" /><category term="public domain" /><category term="publishing" /><category term="zine" /><summary type="html"><![CDATA[Towards the beginning of this year I ran a Kickstarter campaign for a monthly zine of archival material from the year 1923.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://thisisparker.github.io/dotnet/wp-content/uploads/2019/03/Screenshot_2019-02-16_11-56-40.png" /><media:content medium="image" url="https://thisisparker.github.io/dotnet/wp-content/uploads/2019/03/Screenshot_2019-02-16_11-56-40.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Introducing: cursewords, a crossword puzzle solving interface for the terminal</title><link href="https://thisisparker.github.io/dotnet/2019/03/cursewords-crossword-puzzle-solving-interface-terminal/" rel="alternate" type="text/html" title="Introducing: cursewords, a crossword puzzle solving interface for the terminal" /><published>2019-03-03T13:55:35-05:00</published><updated>2019-03-03T13:55:35-05:00</updated><id>https://thisisparker.github.io/dotnet/2019/03/cursewords-crossword-puzzle-solving-interface-terminal</id><content type="html" xml:base="https://thisisparker.github.io/dotnet/2019/03/cursewords-crossword-puzzle-solving-interface-terminal/"><![CDATA[<p>I’m releasing <a href="https://github.com/thisisparker/cursewords">new software today for solving crossword puzzles in the terminal</a>. <code class="language-plaintext highlighter-rouge">cursewords</code> is a small Python program to open, navigate, and solve puzzles stored as .puz files. If you’re a Mac or Linux user, you can install it today by running <code class="language-plaintext highlighter-rouge">pip3 install --user cursewords</code> in your terminal, and then use the <code class="language-plaintext highlighter-rouge">cursewords</code> command to open a .puz file on your computer.</p>

<p>In case you’re not a crossword nerd: the .puz file was developed for popular solving software called AcrossLite, and it remains the most popular format for transmitting crosswords online, from independent creators all the way up to the <em>New York Times</em>.</p>

<figure><img src="https://parkerhiggins.net/wp-content/uploads/2019/03/demo.gif" /><figcaption>cursewords in action on my terminal</figcaption></figure>

<p>In fact, many independent puzzle creators <em>only</em> distribute their puzzles as digital files. For example, I subscribe to a handful of excellent puzzle outlets—<a href="https://avxwords.com/#/">American Values Club</a>, <a href="https://inkubatorcrosswords.com/">The Inkubator</a>, <a href="https://www.crosswordnation.com/">Crossword Nation</a>, <a href="http://www.fireballcrosswords.com/">Fireball Crosswords</a>—that don’t offer an online solver or an app like the <em>Times</em> does. As a Linux user, I didn’t have a lot of options to open them: AcrossLite isn’t compatible, Web-based solutions have their limitations, and beyond that, I wanted to be able to introduce fun features like a “downs only” mode that hides the across clues. (You can try it: running <code class="language-plaintext highlighter-rouge">cursewords</code>with the <code class="language-plaintext highlighter-rouge">--downs-only</code> flag activates this very challenging mode.)</p>

<p>But also, I liked the challenge of writing my own software as a way of thinking more about how crosswords are built and how we hold them in our head for navigation. I also love the retro-computing aesthetic that comes with terminal applications, and—while I think this is the first ever terminal crossword client—that it’s mostly based on tech that has remained unchanged for decades. In that way I’ve likened it to efforts to, say, imagine what <a href="https://jalopnik.com/the-greeks-had-the-technology-to-build-a-car-in-60-a-d-5888188">a car built with first-century technology would look like</a>: it’s not necessarily the most useful or the best, but it’s instructive (and in my case, actually works)!</p>

<p>As the name may suggest, <code class="language-plaintext highlighter-rouge">cursewords</code> relies on a famed <a href="https://en.wikipedia.org/wiki/Curses_(programming_library)">programming library called curses</a> that helps to build text-based user interfaces. It is also heavily indebted to <a href="https://github.com/jquast/blessed">a curses wrapper called blessed</a>, and <a href="https://github.com/alexdej/puzpy">a library called puz that reads and writes .puz files</a>.</p>

<p>If you’re interested in <code class="language-plaintext highlighter-rouge">cursewords</code>, please give it a try and let me know how it works for you. I’ve been very interested in how to solve this problem for over a month now and I am excited to talk about it more publicly.</p>]]></content><author><name>Parker Higgins</name></author><category term="Uncategorized" /><category term="computers" /><category term="crosswords" /><category term="cursewords" /><category term="new york times" /><category term="programming" /><category term="python" /><summary type="html"><![CDATA[I’m releasing new software today for solving crossword puzzles in the terminal. cursewords is a small Python program to open, navigate, and solve puzzles stored as .puz files. If you’re a Mac or Linux user, you can install it today by running pip3 install --user cursewords in your terminal, and then use the cursewords command to open a .puz file on your computer.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://thisisparker.github.io/dotnet/wp-content/uploads/2019/03/Screenshot_2019-03-03_13-05-40.png" /><media:content medium="image" url="https://thisisparker.github.io/dotnet/wp-content/uploads/2019/03/Screenshot_2019-03-03_13-05-40.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Shutting down @LinkArchiver, the Twitter link backup bot</title><link href="https://thisisparker.github.io/dotnet/2018/08/shutting-down-linkarchiver-the-twitter-link-backup-bot/" rel="alternate" type="text/html" title="Shutting down @LinkArchiver, the Twitter link backup bot" /><published>2018-08-26T18:13:52-04:00</published><updated>2018-08-26T18:13:52-04:00</updated><id>https://thisisparker.github.io/dotnet/2018/08/shutting-down-linkarchiver-the-twitter-link-backup-bot</id><content type="html" xml:base="https://thisisparker.github.io/dotnet/2018/08/shutting-down-linkarchiver-the-twitter-link-backup-bot/"><![CDATA[<p>After a little over a year of service, @LinkArchiver, the Twitter bot that <a href="https://parkerhiggins.net/2017/07/linkarchiver-a-new-bot-to-back-up-tweeted-links/">automatically made Internet Archive backups</a> of the links you tweeted, has archived its last link. In that time it archived somewhere around 7.2 million links total from about 9,000 users.((“Quote tweets” are treated like links to tweets, and constituted about a third of the total links. Something like 4.8 million links backed up were at domains other than Twitter.)) The last link it archived was <a href="http://www.latimes.com/local/lanow/la-me-ln-data-throttling-20180822-story.html">this LA Times story about Verizon throttling California firefighters</a>, <a href="https://twitter.com/elizs/status/1032644299144527872">tweeted on Thursday morning</a>.</p>

<p>LinkArchiver stopped working this week when <a href="https://twittercommunity.com/t/details-and-what-to-expect-from-the-api-deprecations-this-week-on-august-16-2018/110746">Twitter turned off the User Stream API</a> that it relied on. Under the hood, LinkArchiver was only looking at its timeline, so it could use Twitter’s built-in following features to make its user list. Since that API change, it can’t pull down a “stream” of its timeline, and so would have to be redesigned to continue to work.</p>

<p>Even as this project is shutting down, I consider it a pretty major success. I am very grateful to Jacob Hoffman-Andrews for <a href="https://twitter.com/j4cob/status/883054720260087808">pitching me the underlying idea</a>. Writing <a href="https://github.com/thisisparker/linkarchiver/">the code</a> (and seeing it get an enthusiastic reception) was a great way to kick off my time at Recurse Center last summer. I’m also grateful to Ben Cotton who gave it a <a href="https://opensource.com/article/17/7/linkarchiver-automatically-submits-links-internet-archive">nice write-up at opensource.com</a> when it launched.</p>

<p>I’ve had a few people ask me about archiving and backup options now that this is no longer available. I’m considering doing something similar for Mastodon, or for plain RSS feeds, but I also don’t want to downplay the fact that Internet Archive does a very good job of running the Wayback Machine crawler, and so the main value I can add is adding a personal layer. In any future work on things like LinkArchiver, I’d want to keep track of that.</p>

<p>There’s also a way to do a Twitter redesign with existing APIs, probably. Instead of getting a stream from Twitter that pinged on new tweet events, it could request new tweets at regular intervals, using an API that’s still operational. If somebody wants to write that, they’re welcome to, but <a href="https://slate.com/technology/2018/08/twitters-new-developer-guidelines-might-end-fun-bot-accounts.html">given the way Twitter is</a>, I’m not eager to do so.</p>]]></content><author><name>Parker Higgins</name></author><category term="Uncategorized" /><category term="bots" /><category term="programming" /><category term="twitter" /><summary type="html"><![CDATA[After a little over a year of service, @LinkArchiver, the Twitter bot that automatically made Internet Archive backups of the links you tweeted, has archived its last link. In that time it archived somewhere around 7.2 million links total from about 9,000 users.((“Quote tweets” are treated like links to tweets, and constituted about a third of the total links. Something like 4.8 million links backed up were at domains other than Twitter.)) The last link it archived was this LA Times story about Verizon throttling California firefighters, tweeted on Thursday morning.]]></summary></entry><entry><title type="html">Twitter should allow users to “hide” old tweets: my correct opinion</title><link href="https://thisisparker.github.io/dotnet/2018/08/twitter-should-allow-users-to-hide-old-tweets-my-correct-opinion/" rel="alternate" type="text/html" title="Twitter should allow users to “hide” old tweets: my correct opinion" /><published>2018-08-05T15:29:02-04:00</published><updated>2018-08-05T15:29:02-04:00</updated><id>https://thisisparker.github.io/dotnet/2018/08/twitter-should-allow-users-to-hide-old-tweets-my-correct-opinion</id><content type="html" xml:base="https://thisisparker.github.io/dotnet/2018/08/twitter-should-allow-users-to-hide-old-tweets-my-correct-opinion/"><![CDATA[<p>Twitter should allow users to “hide” old tweets so that they are only visible to that user, and selectively “un-hide” individual tweets from that collection so that they once again become available at their original URL, in quote tweets and threads, and in sites where they are embedded around the web.</p>

<p>The need for a mechanism to remove old tweets is very clear and becoming abundantly moreso with <a href="https://www.mediamatters.org/blog/2018/07/27/In-their-own-words-the-online-far-rights-motive-to-dig-up-liberal-figures-old-tweets-reven/220827">every rightwing campaign trawling for old statements to weaponize</a> by taking out of context. Numerous guides have been written about how and why to delete your tweets, and it’s beyond the scope of the argument I’m making today. Many of these guides, too, address the emotional difficulty of actually pulling the trigger and wiping an archive—in many cases spanning a decade or so of interaction.</p>

<p>One of the best encapsulations of this problem (and that solution) is John Herrman’s Awl 2015 piece <a href="https://www.theawl.com/2015/08/time-is-a-privacy-setting/">“Time Is a Privacy Setting.”</a> Even just the phrase in the headline is an important contribution, and gets at why simple dichotomies of “public” and “private” are so unsatisfying. A lot more goes into our understanding of privacy than a binary toggle, and time is certainly a factor.</p>

<p>And just as interesting, to me, is something Herrman said this week, in a tweet thread that began with his a link to that now three-year-old essay: <a href="https://web.archive.org/web/20180805181404/https:/twitter.com/jwherrman/status/1024402382615142405">“You thought you were talking, but you were writing.”</a> It’s true! Twitter has managed, for many people, to clear out a barrier that can otherwise be insurmountable, letting people be comfortable writing down their thoughts and conversations. Something the tweet-deleters flirt with, but never seem to quite put their finger on, is that writing (as opposed to talking) has some real advantages in addition to the drawbacks.<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup></p>

<p>This observation is obviously not new to Twitter. My father, a writer, has always exhorted me to keep a journal or a diary, though I’ve never really been able to. One real value of Twitter, for me, has been breaking through that hesitation by setting the threshold of participation so incredibly low that I can just, y’know, write. It’d be better to keep a journal or to blog, but in many cases tweets are good enough.</p>

<p>Over the decade that I’ve been on Twitter, I’ve gone through periods of prolific writing and total dry spells. I’ve maintained this blog regularly at times, and at others it’s sat dormant for months. And the thing is, I frequently refer to and read the old entries for time periods where they exist! Human memory is fickle and fragile, and it is genuinely interesting and educational for me to look back on old writing and see the germs of ideas that later grew into real passions. Looking up old tweets isn’t quite as good, but it fills in the gaps.</p>

<p>Beyond just lowering the threshold to producing such writing, Twitter did some important things to make online writing even more valuable. Search, the villain in recent sagas, is a powerful tool when used for good. Joanne McNeil recently raised a use case I love:</p>

<blockquote class="twitter-tweet"><p lang="en" dir="ltr">One of my favorite things things to do on twitter is search my friends’ old tweets for their reactions over the years to whatever film or book I just finished</p>&mdash; joanne mcneil (@jomc) <a href="https://twitter.com/jomc/status/1025085686947430401?ref_src=twsrc%5Etfw">August 2, 2018</a></blockquote>
<script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>I do that too! Yes, it’d be great if all my friends blogged about every movie they watched or book they read (and I had a good way of finding those posts when they became relevant to me), but this is a decent runner-up. If you want, too, you can see first interactions with people who later became important to you, or <a href="https://waxy.org/2015/12/tracking_the_trump_is_a_comment_section_running_for_president_joke/">all the people who’ve made a joke</a> you just thought of, or people discussing an article you’ve just read, and Twitter (helpfully, in this case) collapses the time gap between you and those people.</p>

<p>Beyond that, Twitter puts a time stamp and a URL on each of these things. In recent years it even preserves the semantics of threads. I don’t want to downplay the very real harm these attributes can cause, but it’s also true that in some situations they provide a ton of value.</p>

<p>Which brings us back to tweet deletion and why it is emotionally difficult for people to do. For better or for worse, this archive we’ve created of our own writing is valuable, and deleting tweets is permanent. (<a href="https://www.wired.com/story/im-deleting-all-my-old-tweets/">Emily Dreyfuss’ article at Wired</a> does an especially good job at grappling with it.) Every guide I’ve read to deleting tweets walks through the process of creating an “archive,” but even doing so misses some of these benefits of keeping old tweets online.</p>

<p>Archiving-then-deleting may preserve a copy for you, but it permanently rips each tweet out of its context in threads, at a URL, within quote tweets, embedded in articles, and in the Search index.<sup id="fnref:2" role="doc-noteref"><a href="#fn:2" class="footnote" rel="footnote">2</a></sup> Maybe you want to do all those things, and you should have the power to do so! But with a corpus of tens of thousands of tweets, in many cases, it is overwhelming to permanently make that decision for everything all at once.</p>

<p>(Side note: that permanence is in large part a result of Twitter’s centralization. Under a more decentralized model,<sup id="fnref:3" role="doc-noteref"><a href="#fn:3" class="footnote" rel="footnote">3</a></sup> where we controlled our own domains, you could maybe just rebuild your database from a backup and point all the right URLs to all the right content. There’s pros and cons to such centralization—and in particular, people seem to love the guarantee that the archive hasn’t been tampered with—but in any case that’s the situation we’re in and what can you do.)</p>

<p>So here’s the solution, referred to up top. Twitter should give users a new option to “hide” old tweets, which would look to every other user like deletion, but which would be a reversible operation. Your hidden tweets should still appear in your searches and views of old threads, but greyed out to indicate they’re not otherwise available. And—and this is probably the hardest part—Twitter should introduce a per-tweet configurability for these settings.</p>

<p>That’s the kicker. Individual tweets could be deleted (fully gone), hidden (just for you), private (for your followers, no retweets), or public. That would be a big change! But it’s important.</p>

<p>(Another side note: when I posted this opinion on Twitter, I got a few responses that such an option should not be available for public figures or politicians or what-have-you. I tend to think that we should not rely on Twitter to preserve these public records, and that their introduction of a feature that has real benefits to real users shouldn’t be hindered by the possible exploitation by shifty officials. And just as with <a href="https://theconversation.com/donald-trumps-tweets-are-now-presidential-records-71973">deleting tweets</a> or <a href="https://www.nytimes.com/2018/05/23/business/media/trump-twitter-block.html">blocking critics</a>, the behavior can be barred without Twitter needing to intervene.)</p>

<p>Twitter the company has mismanaged Twitter the product in a dozen different ways, and its policies on speech, censorship, harassment, and abuse have often been incoherent. It’s also provided an invaluable platform for many of my favorite writers and thinkers, and done so in a way that is reasonably consistent with the technology of the web.<sup id="fnref:4" role="doc-noteref"><a href="#fn:4" class="footnote" rel="footnote">4</a></sup> Giving users more tools—in this case a new privacy setting with more granularity—is the right next step in overcoming the former without diminishing the latter.</p>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p>By definition, most of the articles about deleting tweets are written by writers. Writers, again by definition, tend to write more stuff down. So maybe the benefits of having a place to write stuff down if you otherwise wouldn’t isn’t quite as clear to them. <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
    <li id="fn:2" role="doc-endnote">
      <p>Beyond that, there’s no easy way to present your archive on your own terms to anybody but yourself, a <a href="https://parkerhiggins.net/2017/04/building-mastodon-frozen/">feature I’ve argued for in other contexts</a>. <a href="#fnref:2" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
    <li id="fn:3" role="doc-endnote">
      <p>Check out <a href="https://joinmastodon.org/">Mastodon</a>. <a href="#fnref:3" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
    <li id="fn:4" role="doc-endnote">
      <p>Two good things that stand out: canonical URLs for every tweet, and the fact that unavailable embedded tweets degrade gracefully into text. On the other hand, the normalization and ubiquitous use of a URL shortener sucks. <a href="#fnref:4" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name>Parker Higgins</name></author><category term="Uncategorized" /><category term="mastodon" /><category term="privacy" /><category term="twitter" /><category term="writing" /><summary type="html"><![CDATA[Twitter should allow users to “hide” old tweets so that they are only visible to that user, and selectively “un-hide” individual tweets from that collection so that they once again become available at their original URL, in quote tweets and threads, and in sites where they are embedded around the web.]]></summary></entry><entry><title type="html">Subtitles for Norway’s SlowTV train ride to Oslo</title><link href="https://thisisparker.github.io/dotnet/2018/04/subtitles-for-norways-slowtv-train-ride-to-oslo/" rel="alternate" type="text/html" title="Subtitles for Norway’s SlowTV train ride to Oslo" /><published>2018-04-04T22:24:12-04:00</published><updated>2018-04-04T22:24:12-04:00</updated><id>https://thisisparker.github.io/dotnet/2018/04/subtitles-for-norways-slowtv-train-ride-to-oslo</id><content type="html" xml:base="https://thisisparker.github.io/dotnet/2018/04/subtitles-for-norways-slowtv-train-ride-to-oslo/"><![CDATA[<p><img src="https://parkerhiggins.net/wp-content/uploads/2018/04/Screenshot_2018-03-23_22-34-01.png" alt="" /></p>

<p>One thing I enjoy is Norway’s public service broadcaster’s production of a train ride from Bergen to Oslo, which was first broadcast in real time, over seven or so hours, in 2009. It’s predictably pretty quiet stuff, but—at least now that it’s on Netflix—there are in fact subtitles of what little dialog there is.</p>

<p>Netflix makes it pretty straightforward to extract the subtitles from a given program, and it stores them according to a very fun standard called <a href="https://en.wikipedia.org/wiki/Timed_Text_Markup_Language">the Timed Text Markup Language, or TTML</a>, which just missed adoption by the WHATWG in favor of a lighter-weight, less-XML spec called <a href="https://en.wikipedia.org/wiki/WebVTT">WebVTT</a>.</p>

<p>Anyway, I pulled out the (very spare) subtitles in that format and wanted to convert them to something a little more usable. So first I converted them to JSON, and produced an array with <a href="https://gist.github.com/thisisparker/c9d42d1e10d7dd1420915ac090a41dd4">an object for every subtitle</a>, and then processed it a little further and created a version where <a href="https://gist.github.com/thisisparker/b03d94c7900415da2b616e1fac5d673d">“adjacent” subtitles are combined into single objects</a>.</p>

<p>The result is nearly as hypnotic as the original video:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
    {
        "begin": "00:17:21",
        "end": "00:17:23",
        "text": [
            "[metallic clang]"
        ]
    },
    {
        "begin": "00:19:40",
        "end": "00:19:44",
        "text": [
            "[indistinct conversation / woman laughs]"
        ]
    },
    {
        "begin": "00:19:52",
        "end": "00:19:54",
        "text": [
            "[woman laughs]"
        ]
    },
    {
        "begin": "00:19:57",
        "end": "00:20:01",
        "text": [
            "[indistinct conversation]"
        ]
    },
    {
        "begin": "00:21:47",
        "end": "00:21:48",
        "text": [
            "[metallic clang]"
        ]
    },
    {
        "begin": "00:22:10",
        "end": "00:22:12",
        "text": [
            "[metallic clang]"
        ]
}
</code></pre></div></div>]]></content><author><name>Parker Higgins</name></author><category term="Uncategorized" /><category term="slowtv" /><category term="subtitles" /><category term="trains" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Archiving threatened outlets for the Freedom of the Press Foundation</title><link href="https://thisisparker.github.io/dotnet/2018/03/archiving-threatened-outlets-for-the-freedom-of-the-press-foundation/" rel="alternate" type="text/html" title="Archiving threatened outlets for the Freedom of the Press Foundation" /><published>2018-03-12T23:07:24-04:00</published><updated>2018-03-12T23:07:24-04:00</updated><id>https://thisisparker.github.io/dotnet/2018/03/archiving-threatened-outlets-for-the-freedom-of-the-press-foundation</id><content type="html" xml:base="https://thisisparker.github.io/dotnet/2018/03/archiving-threatened-outlets-for-the-freedom-of-the-press-foundation/"><![CDATA[<p>A little over a month ago, I launched one of the Special Projects I’ve been working on at my new job at the <a href="https://freedom.press">Freedom of the Press Foundation</a>. The <a href="https://archive-it.org/collections/9790">Threatened Outlets collection at Archive-It</a> aims to capture the archives of news sites that we deem vulnerable to “the billionaire problem,” wherein wealthy individuals or organizations can eliminate unflattering coverage through litigation or by purchasing media companies altogether. From <a href="https://freedom.press/news/archiving-alternative-press-threatened-wealthy-buyers/">the launch announcement</a>:</p>

<blockquote>
  <p>Those efforts help individual journalists. But another important thing we can do to reduce the effectiveness of this kind of attack on press freedom is to commit ourselves to the wholesale preservation of threatened sites.</p>

  <p>In this case, we seek to reduce the “upside” for wealthy individuals and organizations who would eliminate embarrassing or unflattering coverage by purchasing outlets outright. In other words, we hope that sites that can’t simply be made to disappear will show some immunity to the billionaire problem.</p>
</blockquote>

<p>To my surprise and delight, our launch received some nice and encouraging coverage, in <a href="https://www.wired.com/story/gawker-archives-freedom-of-press-foundation-toast-la-weekly/">WIRED</a>, <a href="https://beta.techcrunch.com/2018/02/01/freedom-of-the-press-foundation-will-preserve-gawkers-archives/">TechCrunch</a>, <a href="https://thenextweb.com/insider/2018/01/31/meet-archivists-saving-alt-news-sites-permanent-deletion/">The Next Web</a>, <a href="https://www.nytimes.com/2018/02/01/business/media/gawker-archives-press-freedom.html">The New York Times</a>, and others. Sometimes when you’ve got your head down on something that feels like a niche topic, it’s nice to come up for air and realize that the general public is interested, too.</p>]]></content><author><name>Parker Higgins</name></author><category term="Uncategorized" /><category term="archives" /><category term="freedom of the press foundation" /><category term="gawker" /><category term="internet archive" /><category term="journalism" /><category term="writing" /><summary type="html"><![CDATA[A little over a month ago, I launched one of the Special Projects I’ve been working on at my new job at the Freedom of the Press Foundation. The Threatened Outlets collection at Archive-It aims to capture the archives of news sites that we deem vulnerable to “the billionaire problem,” wherein wealthy individuals or organizations can eliminate unflattering coverage through litigation or by purchasing media companies altogether. From the launch announcement:]]></summary></entry><entry><title type="html">“The Florida Project” and questions of control</title><link href="https://thisisparker.github.io/dotnet/2017/10/the-florida-project-and-questions-of-control/" rel="alternate" type="text/html" title="“The Florida Project” and questions of control" /><published>2017-10-13T17:28:22-04:00</published><updated>2017-10-13T17:28:22-04:00</updated><id>https://thisisparker.github.io/dotnet/2017/10/the-florida-project-and-questions-of-control</id><content type="html" xml:base="https://thisisparker.github.io/dotnet/2017/10/the-florida-project-and-questions-of-control/"><![CDATA[<p>I had the opportunity to catch the new movie <a href="http://www.imdb.com/title/tt5649144/"><em>The Florida Project</em></a> this week, without any background on how it was made or what it is about. That’s my preferred context for seeing movies, but it does sometimes lead to my feeling a bit adrift in the theater, or—in this case—stressed that something catastrophic was about to go down. Still, I feel like I end up with a better idea of what the movie is actually about if I don’t know the plot going into it. Here’s the trailer, if you want a sense of it.</p>

<iframe allowfullscreen="" frameborder="0" height="315" loading="lazy" src="https://www.youtube-nocookie.com/embed/WwQ-NH1rRT4?rel=0" width="560"></iframe>

<p>That was certainly the case with <em>The Florida Project</em>, which has attracted nearly <a href="https://www.rottentomatoes.com/m/the_florida_project/">universally positive reviews</a> from critics (and some confusion from audiences about the ending). Just about every review I’ve read since seeing the movie describes is as “empathetic,” which is spot on, but none really dive into what the audience is feeling empathy for. This post lays out my explanation, and to do so includes some very minor spoilers. I don’t really think this movie can be “spoiled,” but skip this post if you want to.</p>

<p>To my mind, what the movie does a great job of showing is how people seek spaces where they can be autonomous and in control. It shows children exploring and imagining, but (most importantly) testing out their agency. At the same time, it shows adults, living precarious existences, staking out small pieces of space where they are in charge.</p>

<p>The building manager Bobby is an obvious example, and his arguments with tenants can almost always be framed in this light: whether he’s enforcing the pool rules, confronting unwelcome strangers, or (most tellingly) moving tenants around to prevent them from establishing residency, he is exerting control over his designated space and limiting the autonomy of the people in it. In that last example, too, he alludes to the fact that he’s an agent of another level of power, specifically pointing at the surveillance cameras to explain how his hands are tied.</p>

<p>Halley’s actions in this area are even more illuminating. You can see it best when she gets into conflict with her best friend Ashley. Though Halley doesn’t even know the basis of their argument, she takes it out on her friend by finding a space where Ashley has no autonomy—her workplace—and exercises arbitrary control over her. From that perspective, it’s only a matter of degree when their dispute escalates to violence, and then when Ashley (it’s implied) calls for an intervention by the state.</p>

<p>In that penultimate scene, where Halley is arguing with DCF agents, she makes this unspoken theme somewhat explicit, saying that they’re on her “property.” Throughout the film there are a lot of reasons to think that unit 323 isn’t really Halley’s “property,” but in that moment she reaches for that language to express that she is in control.</p>

<p>The final scene takes that declaration and escalates it to a sort of surreal and metaphorical place. Echoing the film’s tagline (“Find your kingdom”), Moonee and her friend run to a place that feels like their kingdom, where they are the kings. It’s a bit jarring in a film that’s seemed so grounded and “real” to get such a visual metaphor in the closing moments, but it works (and at the same time drives home the juxtaposition between poverty and expensive fantasy that runs under the whole story).</p>

<p>Maybe most movies could be described in these terms—as Octavia Butler said, “all struggles are, essentially, power struggles.” But I think it brings a lot to <em>The Florida Project</em> in particular to think of areas of control and autonomy. The characters shown in the movie are living precarious existences, and seek that kind of control where they can get it. One message from the film is that, where these kinds of spaces aren’t really available, people will find a way to exert control nonetheless. The empathy in this movie is showing the decisions of people who have been rendered powerless in society.</p>

<p>Policies that perpetuate wealth inequality or pervasive surveillance make communities feel that powerlessness. When people talk about those communities “voting against their interests,” it’s worth considering that interest in exercising some kind of control.</p>]]></content><author><name>Parker Higgins</name></author><category term="Uncategorized" /><category term="control" /><category term="film" /><category term="power" /><category term="the florida project" /><summary type="html"><![CDATA[I had the opportunity to catch the new movie The Florida Project this week, without any background on how it was made or what it is about. That’s my preferred context for seeing movies, but it does sometimes lead to my feeling a bit adrift in the theater, or—in this case—stressed that something catastrophic was about to go down. Still, I feel like I end up with a better idea of what the movie is actually about if I don’t know the plot going into it. Here’s the trailer, if you want a sense of it.]]></summary></entry><entry><title type="html">Pulling free and open weather data</title><link href="https://thisisparker.github.io/dotnet/2017/09/pulling-free-and-open-weather-data-in-python/" rel="alternate" type="text/html" title="Pulling free and open weather data" /><published>2017-09-22T16:41:19-04:00</published><updated>2017-09-22T16:41:19-04:00</updated><id>https://thisisparker.github.io/dotnet/2017/09/pulling-free-and-open-weather-data-in-python</id><content type="html" xml:base="https://thisisparker.github.io/dotnet/2017/09/pulling-free-and-open-weather-data-in-python/"><![CDATA[<p>When I decided to add realtime weather effects to <a href="https://www.twitter.com/choochoobot">@choochoobot</a>, I knew there were a few qualities I wanted to find in a data source. Ideally I would find something free and reliable that didn’t require me to agree to many developer terms or sign up for an API token. Google <a href="https://www.programmableweb.com/news/google-weather-api/2012/08/28">shuttered its undocumented Weather API</a> in 2012, and Yahoo’s offering, which has changed a few times over the years, now requires an account and a consumer key and secret.</p>

<p>It took some poking around but I was eventually successful, and now @choochoobot should correctly show clouds, rain, snow, or thunderstorms, depending on whether observations in New York at the moment it’s tweeting.</p>

<p><img src="https://parkerhiggins.net/wp-content/uploads/2017/09/Screenshot_2017-09-22_15-46-34.png" alt="" /></p>

<p>Current observed weather conditions seems to me like something that should be provided by the government as open data. Fortunately, that intuition was correct: free realtime weather data is openly available, if you know where to look.</p>

<p>The National Weather Service, an agency within NOAA, provides weather observations from stations all over the US in RSS and parseable XML formats. And while parsing XML in Python isn’t exactly pleasant, it’s straightforward enough and I am now able to get qualitative descriptions of the current weather that I can translate into emoji. Here’s <a href="https://github.com/thisisparker/choochoobot/blob/master/choochoogen.py#L62-L86">the relevant code</a>, and here’s how it works:</p>

<ul>
  <li>Each time @choochoobot tweets, it checks to see whether it’s daytime or nighttime. If it’s nighttime, I skip the weather check and instead calculate the phase and placement of the moon in the sky.</li>
  <li>If it’s during the day, I make download the <a href="http://w1.weather.gov/xml/current_obs/KNYC.xml">XML file provided by the KNYC weather station</a> in Central Park. You can load the same file in your browser at any point, but you probably have to view-source to see it in a reasonable human-readable format. That’s one of about <a href="http://w1.weather.gov/xml/current_obs/">1,800 locations in US states and territories</a> that the NWS provides information for.</li>
  <li><span class="citation">@choochoobot</span> then parses the XML file using Python’s built-in <a href="https://docs.python.org/3.5/library/xml.etree.elementtree.html">ElementTree XML API</a>. The relevant field for my purposes is labeled “weather”, which contains a text description of the observed conditions.</li>
  <li>At least in theory, that phrase will always be one of the 250 or so pre-set descriptions <a href="http://w1.weather.gov/xml/current_obs/weather.php">provided by the the NWS</a>. These are sort of grouped into categories—there’s a pretty clear thunderstorm grouping, and one for hail—but it seems a bit ad hoc. My use requires classifying the observed weather into just four or five buckets with matching emoji; I just made a big list of terms that I’d take to mean “cloudy,” for example, and checked to see whether the observed weather phrase was on that list.</li>
  <li>Then I pick emoji for the sky, and put the whole tweet together. If the weather is cloudy, I replace the sun emoji with a sun-behind-clouds emoji. Real scientific stuff.</li>
</ul>

<p>In case it’s useful, I’ve converted the NWS list of <a href="https://github.com/dariusk/corpora/pull/278">weather conditions to JSON</a> and submitted it to Darius Kazemi’s corpora project. Once that gets merged in, those weather conditions will all be available that way.</p>]]></content><author><name>Parker Higgins</name></author><category term="Uncategorized" /><category term="bots" /><category term="howto" /><category term="programming" /><category term="python" /><category term="twitter" /><category term="weather" /><summary type="html"><![CDATA[When I decided to add realtime weather effects to @choochoobot, I knew there were a few qualities I wanted to find in a data source. Ideally I would find something free and reliable that didn’t require me to agree to many developer terms or sign up for an API token. Google shuttered its undocumented Weather API in 2012, and Yahoo’s offering, which has changed a few times over the years, now requires an account and a consumer key and secret.]]></summary></entry><entry><title type="html">“A Mind At Play” and Claude Shannon’s grave</title><link href="https://thisisparker.github.io/dotnet/2017/09/a-mind-at-play-and-claude-shannons-grave/" rel="alternate" type="text/html" title="“A Mind At Play” and Claude Shannon’s grave" /><published>2017-09-20T16:55:16-04:00</published><updated>2017-09-20T16:55:16-04:00</updated><id>https://thisisparker.github.io/dotnet/2017/09/a-mind-at-play-and-claude-shannons-grave</id><content type="html" xml:base="https://thisisparker.github.io/dotnet/2017/09/a-mind-at-play-and-claude-shannons-grave/"><![CDATA[<p>As the “father of information theory,” Claude Shannon’s contributions to the development of modern digital technology are hard to overstate. That work puts him in the ranks of the Einsteins, Turings, and Feynmans of the world; somehow, though, he never seemed to get the credit and public recognition that those scientists received.</p>

<p>A great new biography of Shannon, <a href="https://www.amazon.com/dp/B01M5IJN1P">“A Mind At Play,”</a> tells the story of his work and may provide an explanation. In contrast to the stereotype of a single-minded scholar who doggedly pursues a particular theory for an entire lifetime, Shannon seemed to hop around to whatever captured his imagination—and in more than a few cases, advanced the state of the art or provided entirely new frameworks with which to consider its thorniest problems. (I was fortunate enough to be sent a copy of this book by its author because I had <a href="https://twitter.com/xor/status/727008565278306304">previously posted about</a> a long <em>New Yorker</em> profile of Shannon commemorating the centennial of his birth.)</p>

<p>That professional pathway meant he probably never had a dull moment, but also that he wasn’t around to lead the fields he revolutionized. Beyond that, it makes it difficult to distill his work down to an equation, or even a few sentences. If you had to, though, you could do worse than his formulation of information as entropy. One fascinating detail from the end of “A Mind At Play” was that that equation appears on his grave stone at the <a href="https://en.wikipedia.org/wiki/Mount_Auburn_Cemetery">Mount Auburn Cemetery</a> in Cambridge where he’s buried.</p>

<blockquote>
  <p>What’s concealed, however, is a message on the reverse: covered by a bush, the open section of the marble on the back of the tombstone holds Shannon’s entropy formula.Shannon’s children had hoped the formula would grace the front of the stone; their mother thought it more modest to engrave it on the back.</p>

  <p>And so Claude Shannon’s resting place is marked by a kind of code: a message hidden from view, invisible except to those looking for it.</p>
</blockquote>

<p>This struck me as amazing, and I wanted to see how it was rendered. But, perhaps unsurprisingly, it is difficult to find a picture of the back of a tombstone—even one marking the grave of a person as notable as Claude Shannon. So <a href="https://twitter.com/xor/status/896411797447684096">I turned to Twitter</a>, posting that passage and asking if anybody in or around Cambridge was available to take a picture for me.</p>

<p>Fortunately, it seems many people were as intrigued by that detail as I was, and the tweet was pretty widely circulated. To my surprise and delight, a few groups of people reached out to tell me they were available to go, and a few more just set out for there. I had inadvertently prompted a small flashmob at the grave of a scientist who had passed some 16 years earlier.</p>

<blockquote>
  <p>There it is! <a href="https://t.co/wjz7PqxVeN">pic.twitter.com/wjz7PqxVeN</a></p>

  <p>— Space User 583 (@User583) <a href="https://twitter.com/User583/status/896496769923764224">August 12, 2017</a></p>
</blockquote>

<script async="" charset="utf-8" src="//platform.twitter.com/widgets.js"></script>

<p>The equation is in fact pretty well hidden, but a few folks were able to duck into the bush behind the grave and grab a shot. I love the way it looks, and I was very excited that this new book prompted me and a few nerds around the world to share a moment of appreciation for the great Claude Shannon over a network that his work made possible.</p>]]></content><author><name>Parker Higgins</name></author><category term="Uncategorized" /><category term="books" /><category term="claude shannon" /><category term="information theory" /><category term="twitter" /><summary type="html"><![CDATA[As the “father of information theory,” Claude Shannon’s contributions to the development of modern digital technology are hard to overstate. That work puts him in the ranks of the Einsteins, Turings, and Feynmans of the world; somehow, though, he never seemed to get the credit and public recognition that those scientists received.]]></summary></entry></feed>